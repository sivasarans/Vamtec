{"ast":null,"code":"const express = require('express');\nconst multer = require('multer');\nconst path = require('path');\n\n// Set up storage for uploaded files\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, 'uploads/'); // Save to 'uploads' folder\n  },\n  filename: (req, file, cb) => {\n    cb(null, Date.now() + path.extname(file.originalname)); // Use unique filename\n  }\n});\nconst upload = multer({\n  storage: storage\n});\nconst app = express();\n\n// Serve static files from the 'uploads' folder\napp.use('/uploads', express.static('uploads'));\n\n// Handle file upload POST request\napp.post('/upload', upload.single('file'), (req, res) => {\n  if (!req.file) {\n    return res.status(400).send('No file uploaded.');\n  }\n  res.status(200).send('File uploaded successfully');\n});\napp.listen(3001, () => {\n  console.log('Server is running on http://localhost:3001');\n});","map":{"version":3,"names":["express","require","multer","path","storage","diskStorage","destination","req","file","cb","filename","Date","now","extname","originalname","upload","app","use","static","post","single","res","status","send","listen","console","log"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/#2 react_node_pg_child_image_success/src/App.js"],"sourcesContent":["const express = require('express');\nconst multer = require('multer');\nconst path = require('path');\n\n// Set up storage for uploaded files\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, 'uploads/'); // Save to 'uploads' folder\n  },\n  filename: (req, file, cb) => {\n    cb(null, Date.now() + path.extname(file.originalname)); // Use unique filename\n  }\n});\n\nconst upload = multer({ storage: storage });\nconst app = express();\n\n// Serve static files from the 'uploads' folder\napp.use('/uploads', express.static('uploads'));\n\n// Handle file upload POST request\napp.post('/upload', upload.single('file'), (req, res) => {\n  if (!req.file) {\n    return res.status(400).send('No file uploaded.');\n  }\n  res.status(200).send('File uploaded successfully');\n});\n\napp.listen(3001, () => {\n  console.log('Server is running on http://localhost:3001');\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACA,MAAMG,OAAO,GAAGF,MAAM,CAACG,WAAW,CAAC;EACjCC,WAAW,EAAEA,CAACC,GAAG,EAAEC,IAAI,EAAEC,EAAE,KAAK;IAC9BA,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC;EACDC,QAAQ,EAAEA,CAACH,GAAG,EAAEC,IAAI,EAAEC,EAAE,KAAK;IAC3BA,EAAE,CAAC,IAAI,EAAEE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGT,IAAI,CAACU,OAAO,CAACL,IAAI,CAACM,YAAY,CAAC,CAAC,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGb,MAAM,CAAC;EAAEE,OAAO,EAAEA;AAAQ,CAAC,CAAC;AAC3C,MAAMY,GAAG,GAAGhB,OAAO,CAAC,CAAC;;AAErB;AACAgB,GAAG,CAACC,GAAG,CAAC,UAAU,EAAEjB,OAAO,CAACkB,MAAM,CAAC,SAAS,CAAC,CAAC;;AAE9C;AACAF,GAAG,CAACG,IAAI,CAAC,SAAS,EAAEJ,MAAM,CAACK,MAAM,CAAC,MAAM,CAAC,EAAE,CAACb,GAAG,EAAEc,GAAG,KAAK;EACvD,IAAI,CAACd,GAAG,CAACC,IAAI,EAAE;IACb,OAAOa,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,mBAAmB,CAAC;EAClD;EACAF,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,4BAA4B,CAAC;AACpD,CAAC,CAAC;AAEFP,GAAG,CAACQ,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;AAC3D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}