{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React PG CONNECTION\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n\n  // Fetch countries from the backend\n  useEffect(() => {\n    fetch('http://localhost:5000/countries') // Ensure this matches your backend route\n    .then(response => response.json()).then(data => setCountries(data)).catch(error => console.error('Error fetching countries:', error));\n  }, []);\n\n  // Fetch states when a country is selected\n  useEffect(() => {\n    if (selectedCountry) {\n      fetch(`http://localhost:5000/api/states/${selectedCountry}`) // Make sure the URL matches the backend\n      .then(response => response.json()).then(data => setStates(data)).catch(error => console.error('Error fetching states:', error));\n    } else {\n      setStates([]);\n    }\n  }, [selectedCountry]);\n\n  // Handle form submit (you can implement registration logic here)\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Form submitted:', {\n      country: selectedCountry,\n      state: selectedState\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: \"Country:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"country\",\n          value: selectedCountry,\n          onChange: e => setSelectedCountry(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: country.country_name,\n            children: country.country_name\n          }, country.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"state\",\n          children: \"State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"state\",\n          value: selectedState,\n          onChange: e => setSelectedState(e.target.value),\n          disabled: !selectedCountry // Disable state dropdown until a country is selected\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: state.state_name,\n            children: state.state_name\n          }, state.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"yEaHWvtf+XHwhDHdC+CEWKTxmRY=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Register","_s","countries","setCountries","states","setStates","selectedCountry","setSelectedCountry","selectedState","setSelectedState","fetch","then","response","json","data","catch","error","console","handleSubmit","event","preventDefault","log","country","state","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","e","target","map","country_name","disabled","state_name","type","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React PG CONNECTION/src/components/Register.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Register = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedState, setSelectedState] = useState('');\r\n\r\n  // Fetch countries from the backend\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/countries') // Ensure this matches your backend route\r\n      .then((response) => response.json())\r\n      .then((data) => setCountries(data))\r\n      .catch((error) => console.error('Error fetching countries:', error));\r\n  }, []);\r\n\r\n  // Fetch states when a country is selected\r\n  useEffect(() => {\r\n    if (selectedCountry) {\r\n        fetch(`http://localhost:5000/api/states/${selectedCountry}`)  // Make sure the URL matches the backend\r\n            .then((response) => response.json())\r\n            .then((data) => setStates(data))\r\n            .catch((error) => console.error('Error fetching states:', error));\r\n    } else {\r\n        setStates([]);\r\n    }\r\n}, [selectedCountry]);\r\n\r\n\r\n  // Handle form submit (you can implement registration logic here)\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log('Form submitted:', {\r\n      country: selectedCountry,\r\n      state: selectedState,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"country\">Country:</label>\r\n          <select\r\n            id=\"country\"\r\n            value={selectedCountry}\r\n            onChange={(e) => setSelectedCountry(e.target.value)}\r\n          >\r\n            <option value=\"\">Select a country</option>\r\n            {countries.map((country) => (\r\n              <option key={country.id} value={country.country_name}>\r\n                {country.country_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"state\">State:</label>\r\n          <select\r\n            id=\"state\"\r\n            value={selectedState}\r\n            onChange={(e) => setSelectedState(e.target.value)}\r\n            disabled={!selectedCountry} // Disable state dropdown until a country is selected\r\n          >\r\n            <option value=\"\">Select a state</option>\r\n            {states.map((state) => (\r\n              <option key={state.id} value={state.state_name}>\r\n                {state.state_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}