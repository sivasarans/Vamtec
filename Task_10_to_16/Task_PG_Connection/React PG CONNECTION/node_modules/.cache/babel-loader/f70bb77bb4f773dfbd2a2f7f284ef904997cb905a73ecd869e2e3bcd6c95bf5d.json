{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React PG CONNECTION\\\\src\\\\Form2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction State() {\n  _s();\n  const [formData, setFormData] = useState({\n    country: '',\n    stateName: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [displayData, setDisplayData] = useState([]);\n  const [countryList, setCountryList] = useState([]);\n  const [editId, setEditId] = useState(null);\n  useEffect(() => {\n    fetchCountries();\n    fetchStates();\n  }, []);\n  const fetchCountries = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/countries\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCountryList(data);\n    } catch (error) {\n      console.error(\"Error fetching countries:\", error);\n    }\n  };\n  const fetchStates = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/states\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Fetched States:\", data); // Log the fetched data\n\n      setDisplayData(data);\n    } catch (error) {\n      console.error(\"Error fetching states ---:\", error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [id]: value\n    });\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [id]: ''\n    }));\n  };\n  const validateForm = () => {\n    const formErrors = {};\n    if (!formData.country) {\n      formErrors.country = \"Please select a country.\";\n    }\n    if (!formData.stateName) {\n      formErrors.stateName = \"State name is required.\";\n    } else if (formData.stateName.length < 3) {\n      formErrors.stateName = \"State name should be at least 3 characters.\";\n    }\n    setErrors(formErrors);\n    return Object.keys(formErrors).length === 0;\n  };\n\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     if (validateForm()) {\n  //         try {\n  //             const method = editId ? 'PUT' : 'POST';\n  //             const response = await fetch(`http://localhost:5000/states${editId ? `/${editId}` : ''}`, {\n  //                 method,\n  //                 headers: { 'Content-Type': 'application/json' },\n  //                 body: JSON.stringify(formData)\n  //             });\n\n  //             if (response.ok) {\n  //                 alert(editId ? \"State updated successfully!\" : \"State added successfully!\");\n  //                 fetchStates();\n  //                 setFormData({ country: '', stateName: '' });\n  //                 setEditId(null);\n  //             } else {\n  //                 console.error(\"Error submitting state.\");\n  //             }\n  //         } catch (error) {\n  //             console.error(\"Error:\", error);\n  //         }\n  //     }\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevents the default form submission behavior\n\n    if (validateForm()) {\n      // Validate the form data before submitting\n      try {\n        console.log(\"Form data to be sent:\", formData); // Log form data to verify\n\n        if (!editId) {\n          // Add new state entry if no editId exists (i.e., creating new state)\n          const response = await fetch('http://localhost:5000/states', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData) // Send the form data as JSON\n          });\n          if (response.ok) {\n            alert(\"State added successfully!\"); // Success message\n            fetchStates(); // Fetch the updated list of states after adding the new one\n            setFormData({\n              stateCode: '',\n              stateName: ''\n            }); // Reset the form data\n          } else {\n            const errorData = await response.json(); // Get the response body for more details\n            console.error(\"Error response:\", errorData); // Log the error response\n            alert(\"Failed to add state. Please try again.\"); // Error message if add fails\n          }\n        } else {\n          // Update an existing state if editId exists\n          const response = await fetch(`http://localhost:5000/states/${editId}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData) // Send the updated form data as JSON\n          });\n          if (response.ok) {\n            alert(\"State updated successfully!\"); // Success message\n            fetchStates(); // Fetch the updated list of states after updating the existing one\n            setFormData({\n              stateCode: '',\n              stateName: ''\n            }); // Reset the form data\n            setEditId(null); // Clear the editId so it can be used for future entries\n          } else {\n            alert(\"Failed to update state. Please try again.\"); // Error message if update fails\n          }\n        }\n      } catch (error) {\n        console.error(\"Error submitting form:\", error); // Log any errors to the console\n      }\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/states/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        fetchStates();\n        alert(\"State deleted successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting state:\", error);\n    }\n  };\n  const handleEdit = id => {\n    const stateToEdit = displayData.find(state => state.id === id);\n    if (stateToEdit) {\n      setFormData({\n        country: stateToEdit.country_name,\n        stateName: stateToEdit.state_name\n      });\n      setEditId(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 flex items-center justify-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: [editId ? \"Update\" : \"Add\", \" State\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"country\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Select Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"country\",\n            value: formData.country,\n            onChange: handleInputChange,\n            className: \"mt-1 block w-full p-2 border border-gray-300 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose a country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), countryList.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country.country_code,\n              children: country.country_name\n            }, country.country_code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), errors.country && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"stateName\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"State Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"stateName\",\n            value: formData.stateName,\n            onChange: handleInputChange,\n            className: \"mt-1 block w-full p-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), errors.stateName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.stateName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600\",\n          children: editId ? \"Update State\" : \"Add State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mt-6 mb-4\",\n        children: \"States List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"State Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayData.map(state => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-2 border-b\",\n              children: state.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-2 border-b\",\n              children: state.country_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-2 border-b\",\n              children: state.state_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-2 border-b\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(state.id),\n                className: \"text-blue-500 hover:text-blue-700\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-2 border-b\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(state.id),\n                className: \"text-red-500 hover:text-red-700\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this)]\n          }, state.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_s(State, \"BOh5fsFYcI+GCuMntQr1eNlDBog=\");\n_c = State;\nexport default State;\nvar _c;\n$RefreshReg$(_c, \"State\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","State","_s","formData","setFormData","country","stateName","errors","setErrors","displayData","setDisplayData","countryList","setCountryList","editId","setEditId","fetchCountries","fetchStates","response","fetch","ok","Error","status","data","json","error","console","log","handleInputChange","e","id","value","target","prevErrors","validateForm","formErrors","length","Object","keys","handleSubmit","preventDefault","method","headers","body","JSON","stringify","alert","stateCode","errorData","handleDelete","handleEdit","stateToEdit","find","state","country_name","state_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","map","country_code","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React PG CONNECTION/src/Form2.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction State() {\r\n    const [formData, setFormData] = useState({ country: '', stateName: '' });\r\n    const [errors, setErrors] = useState({});\r\n    const [displayData, setDisplayData] = useState([]);\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [editId, setEditId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchCountries();\r\n        fetchStates();\r\n    }, []);\r\n\r\n    const fetchCountries = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/countries\");\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            setCountryList(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching countries:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchStates = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/states\");\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Fetched States:\", data); // Log the fetched data\r\n\r\n            setDisplayData(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching states ---:\", error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setFormData({ ...formData, [id]: value });\r\n        setErrors((prevErrors) => ({ ...prevErrors, [id]: '' }));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const formErrors = {};\r\n        if (!formData.country) {\r\n            formErrors.country = \"Please select a country.\";\r\n        }\r\n        if (!formData.stateName) {\r\n            formErrors.stateName = \"State name is required.\";\r\n        } else if (formData.stateName.length < 3) {\r\n            formErrors.stateName = \"State name should be at least 3 characters.\";\r\n        }\r\n        setErrors(formErrors);\r\n        return Object.keys(formErrors).length === 0;\r\n    };\r\n\r\n    // const handleSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n    //     if (validateForm()) {\r\n    //         try {\r\n    //             const method = editId ? 'PUT' : 'POST';\r\n    //             const response = await fetch(`http://localhost:5000/states${editId ? `/${editId}` : ''}`, {\r\n    //                 method,\r\n    //                 headers: { 'Content-Type': 'application/json' },\r\n    //                 body: JSON.stringify(formData)\r\n    //             });\r\n\r\n    //             if (response.ok) {\r\n    //                 alert(editId ? \"State updated successfully!\" : \"State added successfully!\");\r\n    //                 fetchStates();\r\n    //                 setFormData({ country: '', stateName: '' });\r\n    //                 setEditId(null);\r\n    //             } else {\r\n    //                 console.error(\"Error submitting state.\");\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error(\"Error:\", error);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault(); // Prevents the default form submission behavior\r\n      \r\n      if (validateForm()) { // Validate the form data before submitting\r\n        try {\r\n          console.log(\"Form data to be sent:\", formData); // Log form data to verify\r\n\r\n          if (!editId) {\r\n            // Add new state entry if no editId exists (i.e., creating new state)\r\n            const response = await fetch('http://localhost:5000/states', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(formData), // Send the form data as JSON\r\n            });\r\n    \r\n            if (response.ok) {\r\n              alert(\"State added successfully!\"); // Success message\r\n              fetchStates(); // Fetch the updated list of states after adding the new one\r\n              setFormData({ stateCode: '', stateName: '' }); // Reset the form data\r\n            } else {\r\n              const errorData = await response.json(); // Get the response body for more details\r\n              console.error(\"Error response:\", errorData); // Log the error response\r\n              alert(\"Failed to add state. Please try again.\"); // Error message if add fails\r\n            }\r\n          } else {\r\n            // Update an existing state if editId exists\r\n            const response = await fetch(`http://localhost:5000/states/${editId}`, {\r\n              method: 'PUT',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(formData), // Send the updated form data as JSON\r\n            });\r\n    \r\n            if (response.ok) {\r\n              alert(\"State updated successfully!\"); // Success message\r\n              fetchStates(); // Fetch the updated list of states after updating the existing one\r\n              setFormData({ stateCode: '', stateName: '' }); // Reset the form data\r\n              setEditId(null); // Clear the editId so it can be used for future entries\r\n            } else {\r\n              alert(\"Failed to update state. Please try again.\"); // Error message if update fails\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error submitting form:\", error); // Log any errors to the console\r\n        }\r\n      }\r\n    };\r\n    \r\n    \r\n    const handleDelete = async (id) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/states/${id}`, { method: 'DELETE' });\r\n            if (response.ok) {\r\n                fetchStates();\r\n                alert(\"State deleted successfully\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error deleting state:\", error);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (id) => {\r\n        const stateToEdit = displayData.find((state) => state.id === id);\r\n        if (stateToEdit) {\r\n            setFormData({ country: stateToEdit.country_name, stateName: stateToEdit.state_name });\r\n            setEditId(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gray-100 flex items-center justify-center h-screen\">\r\n            <div className=\"bg-white p-6 rounded shadow-md w-96\">\r\n                <h2 className=\"text-2xl font-bold mb-4\">{editId ? \"Update\" : \"Add\"} State</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700\">Select Country</label>\r\n                        <select\r\n                            id=\"country\"\r\n                            value={formData.country}\r\n                            onChange={handleInputChange}\r\n                            className=\"mt-1 block w-full p-2 border border-gray-300 rounded\"\r\n                        >\r\n                            <option value=\"\">Choose a country</option>\r\n                            {countryList.map((country) => (\r\n                                <option key={country.country_code} value={country.country_code}>\r\n                                    {country.country_name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.country && <p className=\"text-red-500 text-sm\">{errors.country}</p>}\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"stateName\" className=\"block text-sm font-medium text-gray-700\">State Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"stateName\"\r\n                            value={formData.stateName}\r\n                            onChange={handleInputChange}\r\n                            className=\"mt-1 block w-full p-2 border border-gray-300 rounded\"\r\n                        />\r\n                        {errors.stateName && <p className=\"text-red-500 text-sm\">{errors.stateName}</p>}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600\">\r\n                        {editId ? \"Update State\" : \"Add State\"}\r\n                    </button>\r\n                </form>\r\n\r\n                <h2 className=\"text-xl font-bold mt-6 mb-4\">States List</h2>\r\n                <table className=\"min-w-full bg-white border border-gray-300\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"py-2 px-2 border-b text-left\">ID</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">Country</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">State Name</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">Edit</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {displayData.map((state) => (\r\n                            <tr key={state.id}>\r\n                                <td className=\"py-2 px-2 border-b\">{state.id}</td>\r\n                                <td className=\"py-2 px-2 border-b\">{state.country_name}</td>\r\n                                <td className=\"py-2 px-2 border-b\">{state.state_name}</td>\r\n                                <td className=\"py-2 px-2 border-b\">\r\n                                    <button\r\n                                        onClick={() => handleEdit(state.id)}\r\n                                        className=\"text-blue-500 hover:text-blue-700\"\r\n                                    >\r\n                                        Edit\r\n                                    </button>\r\n                                </td>\r\n                                <td className=\"py-2 px-2 border-b\">\r\n                                    <button\r\n                                        onClick={() => handleDelete(state.id)}\r\n                                        className=\"text-red-500 hover:text-red-700\"\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default State;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}