{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React PG CONNECTION\\\\src\\\\Form2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction State() {\n  _s();\n  const [formData, setFormData] = useState({\n    country: '',\n    stateName: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [displayData, setDisplayData] = useState([]);\n  const [countryList, setCountryList] = useState([]);\n  const [editId, setEditId] = useState(null);\n\n  // Fetching countries and states on initial load\n  useEffect(() => {\n    fetchCountries();\n    fetchStates();\n  }, []);\n\n  // Fetch list of countries\n  // const fetchCountries = async () => {\n  //     try {\n  //         const response = await fetch(\"http://localhost:5000/country\");\n  //         if (!response.ok) {\n  //             throw new Error(`HTTP error! Status: ${response.status}`);\n  //         }\n  //         const data = await response.json();\n  //         setCountryList(data);\n  //     } catch (error) {\n  //         console.error(\"Error fetching countries:\", error);\n  //     }\n  // };\n  const fetchCountries = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/countries\"); // Make sure the endpoint is correct\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCountryList(data); // Store the list of countries in state\n    } catch (error) {\n      console.error(\"Error fetching countries:\", error);\n    }\n  };\n\n  // Fetch list of states\n  const fetchStates = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/states\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setDisplayData(data);\n    } catch (error) {\n      console.error(\"Error fetching states:\", error);\n    }\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [id]: value\n    });\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [id]: ''\n    }));\n  };\n\n  // Validate form data\n  const validateForm = () => {\n    const formErrors = {};\n    if (!formData.country) {\n      formErrors.country = \"Please select a country.\";\n    }\n    if (!formData.stateName) {\n      formErrors.stateName = \"State name is required.\";\n    } else if (formData.stateName.length < 3) {\n      formErrors.stateName = \"State name should be at least 3 characters.\";\n    }\n    setErrors(formErrors);\n    return Object.keys(formErrors).length === 0;\n  };\n\n  // Handle form submission (adding or updating state)\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     if (validateForm()) {\n  //         const url = editId\n  //             ? `http://localhost:5000/states/${editId}`\n  //             : 'http://localhost:5000/states';\n  //         const method = editId ? 'PUT' : 'POST';\n\n  //         try {\n  //             const response = await fetch(url, {\n  //                 method: method,\n  //                 headers: { 'Content-Type': 'application/json' },\n  //                 body: JSON.stringify(formData),\n  //             });\n\n  //             if (response.ok) {\n  //                 alert(editId ? \"State updated successfully!\" : \"State added successfully!\");\n  //                 fetchStates();\n  //                 setFormData({ country: '', stateName: '' });\n  //                 setEditId(null); // Reset editId after submission\n  //             } else {\n  //                 const errorData = await response.json();\n  //                 alert(`Failed: ${errorData.error || \"Please try again.\"}`);\n  //             }\n  //         } catch (error) {\n  //             console.error(\"Error submitting form:\", error);\n  //             alert(\"An unexpected error occurred. Please try again later.\");\n  //         }\n  //     }\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      try {\n        const response = await fetch('http://localhost:5000/states', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json' // Ensure this header is set\n          },\n          body: JSON.stringify(formData) // Send data as JSON\n        });\n        if (response.ok) {\n          alert(\"State added successfully!\");\n          fetchStates(); // Refresh the list of states\n          setFormData({\n            country: '',\n            stateName: ''\n          }); // Reset form\n        } else {\n          const errorData = await response.json();\n          console.error(\"Error response:\", errorData);\n          alert(`Failed to add state: ${errorData.message || \"Please try again.\"}`);\n        }\n      } catch (error) {\n        console.error(\"Error submitting form:\", error);\n        alert(\"An unexpected error occurred. Please try again later.\");\n      }\n    }\n  };\n\n  // Handle deleting state\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/states/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        fetchStates();\n        alert(\"State deleted successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting state:\", error);\n    }\n  };\n\n  // Handle editing state\n  const handleEdit = id => {\n    const stateToEdit = displayData.find(state => state.id === id);\n    if (stateToEdit) {\n      setFormData({\n        country: stateToEdit.country_name,\n        stateName: stateToEdit.state_name\n      });\n      setEditId(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 flex items-center justify-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: [editId ? \"Update\" : \"Add\", \" State\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"country\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Select Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"country\",\n            value: formData.country,\n            onChange: handleInputChange,\n            className: \"mt-1 block w-full p-2 border border-gray-300 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose a country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), countryList.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country.country_name,\n              children: country.country_name\n            }, country.country_code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), errors.country && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"stateName\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"State Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"stateName\",\n            value: formData.stateName,\n            onChange: handleInputChange,\n            className: \"mt-1 block w-full p-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), errors.stateName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.stateName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600\",\n          children: editId ? \"Update State\" : \"Add State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mt-6 mb-4\",\n        children: \"States List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"State Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayData.map(state => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-2 border-b\",\n              children: state.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-2 border-b\",\n              children: state.country_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-2 border-b\",\n              children: state.state_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-2 border-b\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(state.id),\n                className: \"text-blue-500 hover:text-blue-700\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-2 border-b\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(state.id),\n                className: \"text-red-500 hover:text-red-700\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)]\n          }, state.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n_s(State, \"BOh5fsFYcI+GCuMntQr1eNlDBog=\");\n_c = State;\nexport default State;\nvar _c;\n$RefreshReg$(_c, \"State\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","State","_s","formData","setFormData","country","stateName","errors","setErrors","displayData","setDisplayData","countryList","setCountryList","editId","setEditId","fetchCountries","fetchStates","response","fetch","ok","Error","status","data","json","error","console","handleInputChange","e","id","value","target","prevErrors","validateForm","formErrors","length","Object","keys","handleSubmit","preventDefault","method","headers","body","JSON","stringify","alert","errorData","message","handleDelete","handleEdit","stateToEdit","find","state","country_name","state_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","map","country_code","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React PG CONNECTION/src/Form2.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction State() {\r\n    const [formData, setFormData] = useState({ country: '', stateName: '' });\r\n    const [errors, setErrors] = useState({});\r\n    const [displayData, setDisplayData] = useState([]);\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [editId, setEditId] = useState(null);\r\n\r\n    // Fetching countries and states on initial load\r\n    useEffect(() => {\r\n        fetchCountries();\r\n        fetchStates();\r\n    }, []);\r\n\r\n    // Fetch list of countries\r\n    // const fetchCountries = async () => {\r\n    //     try {\r\n    //         const response = await fetch(\"http://localhost:5000/country\");\r\n    //         if (!response.ok) {\r\n    //             throw new Error(`HTTP error! Status: ${response.status}`);\r\n    //         }\r\n    //         const data = await response.json();\r\n    //         setCountryList(data);\r\n    //     } catch (error) {\r\n    //         console.error(\"Error fetching countries:\", error);\r\n    //     }\r\n    // };\r\n    const fetchCountries = async () => {\r\n      try {\r\n          const response = await fetch(\"http://localhost:5000/countries\");  // Make sure the endpoint is correct\r\n          if (!response.ok) {\r\n              throw new Error(`HTTP error! Status: ${response.status}`);\r\n          }\r\n          const data = await response.json();\r\n          setCountryList(data);  // Store the list of countries in state\r\n      } catch (error) {\r\n          console.error(\"Error fetching countries:\", error);\r\n      }\r\n  };\r\n  \r\n\r\n    // Fetch list of states\r\n    const fetchStates = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/states\");\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            setDisplayData(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching states:\", error);\r\n        }\r\n    };\r\n\r\n    // Handle form input changes\r\n    const handleInputChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setFormData({ ...formData, [id]: value });\r\n        setErrors((prevErrors) => ({ ...prevErrors, [id]: '' }));\r\n    };\r\n\r\n    // Validate form data\r\n    const validateForm = () => {\r\n        const formErrors = {};\r\n        if (!formData.country) {\r\n            formErrors.country = \"Please select a country.\";\r\n        }\r\n        if (!formData.stateName) {\r\n            formErrors.stateName = \"State name is required.\";\r\n        } else if (formData.stateName.length < 3) {\r\n            formErrors.stateName = \"State name should be at least 3 characters.\";\r\n        }\r\n        setErrors(formErrors);\r\n        return Object.keys(formErrors).length === 0;\r\n    };\r\n\r\n    // Handle form submission (adding or updating state)\r\n    // const handleSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n    //     if (validateForm()) {\r\n    //         const url = editId\r\n    //             ? `http://localhost:5000/states/${editId}`\r\n    //             : 'http://localhost:5000/states';\r\n    //         const method = editId ? 'PUT' : 'POST';\r\n\r\n    //         try {\r\n    //             const response = await fetch(url, {\r\n    //                 method: method,\r\n    //                 headers: { 'Content-Type': 'application/json' },\r\n    //                 body: JSON.stringify(formData),\r\n    //             });\r\n\r\n    //             if (response.ok) {\r\n    //                 alert(editId ? \"State updated successfully!\" : \"State added successfully!\");\r\n    //                 fetchStates();\r\n    //                 setFormData({ country: '', stateName: '' });\r\n    //                 setEditId(null); // Reset editId after submission\r\n    //             } else {\r\n    //                 const errorData = await response.json();\r\n    //                 alert(`Failed: ${errorData.error || \"Please try again.\"}`);\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error(\"Error submitting form:\", error);\r\n    //             alert(\"An unexpected error occurred. Please try again later.\");\r\n    //         }\r\n    //     }\r\n    // };\r\n \r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      if (validateForm()) {\r\n          try {\r\n              const response = await fetch('http://localhost:5000/states', {\r\n                  method: 'POST',\r\n                  headers: {\r\n                      'Content-Type': 'application/json',  // Ensure this header is set\r\n                  },\r\n                  body: JSON.stringify(formData),  // Send data as JSON\r\n              });\r\n  \r\n              if (response.ok) {\r\n                  alert(\"State added successfully!\");\r\n                  fetchStates();  // Refresh the list of states\r\n                  setFormData({ country: '', stateName: '' });  // Reset form\r\n              } else {\r\n                  const errorData = await response.json();\r\n                  console.error(\"Error response:\", errorData);\r\n                  alert(`Failed to add state: ${errorData.message || \"Please try again.\"}`);\r\n              }\r\n          } catch (error) {\r\n              console.error(\"Error submitting form:\", error);\r\n              alert(\"An unexpected error occurred. Please try again later.\");\r\n          }\r\n      }\r\n  };\r\n  \r\n    // Handle deleting state\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/states/${id}`, { method: 'DELETE' });\r\n            if (response.ok) {\r\n                fetchStates();\r\n                alert(\"State deleted successfully\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error deleting state:\", error);\r\n        }\r\n    };\r\n\r\n    // Handle editing state\r\n    const handleEdit = (id) => {\r\n        const stateToEdit = displayData.find((state) => state.id === id);\r\n        if (stateToEdit) {\r\n            setFormData({ country: stateToEdit.country_name, stateName: stateToEdit.state_name });\r\n            setEditId(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gray-100 flex items-center justify-center h-screen\">\r\n            <div className=\"bg-white p-6 rounded shadow-md w-96\">\r\n                <h2 className=\"text-2xl font-bold mb-4\">{editId ? \"Update\" : \"Add\"} State</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700\">Select Country</label>\r\n                        <select\r\n                            id=\"country\"\r\n                            value={formData.country}\r\n                            onChange={handleInputChange}\r\n                            className=\"mt-1 block w-full p-2 border border-gray-300 rounded\"\r\n                        >\r\n                            <option value=\"\">Choose a country</option>\r\n                            {countryList.map((country) => (\r\n                                <option key={country.country_code} value={country.country_name}>\r\n                                    {country.country_name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.country && <p className=\"text-red-500 text-sm\">{errors.country}</p>}\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"stateName\" className=\"block text-sm font-medium text-gray-700\">State Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"stateName\"\r\n                            value={formData.stateName}\r\n                            onChange={handleInputChange}\r\n                            className=\"mt-1 block w-full p-2 border border-gray-300 rounded\"\r\n                        />\r\n                        {errors.stateName && <p className=\"text-red-500 text-sm\">{errors.stateName}</p>}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600\">\r\n                        {editId ? \"Update State\" : \"Add State\"}\r\n                    </button>\r\n                </form>\r\n\r\n                <h2 className=\"text-xl font-bold mt-6 mb-4\">States List</h2>\r\n                <table className=\"min-w-full bg-white border border-gray-300\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"py-2 px-2 border-b text-left\">ID</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">Country</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">State Name</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">Edit</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {displayData.map((state) => (\r\n                            <tr key={state.id}>\r\n                                <td className=\"py-2 px-2 border-b\">{state.id}</td>\r\n                                <td className=\"py-2 px-2 border-b\">{state.country_name}</td>\r\n                                <td className=\"py-2 px-2 border-b\">{state.state_name}</td>\r\n                                <td className=\"py-2 px-2 border-b\">\r\n                                    <button\r\n                                        onClick={() => handleEdit(state.id)}\r\n                                        className=\"text-blue-500 hover:text-blue-700\"\r\n                                    >\r\n                                        Edit\r\n                                    </button>\r\n                                </td>\r\n                                <td className=\"py-2 px-2 border-b\">\r\n                                    <button\r\n                                        onClick={() => handleDelete(state.id)}\r\n                                        className=\"text-red-500 hover:text-red-700\"\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default State;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}