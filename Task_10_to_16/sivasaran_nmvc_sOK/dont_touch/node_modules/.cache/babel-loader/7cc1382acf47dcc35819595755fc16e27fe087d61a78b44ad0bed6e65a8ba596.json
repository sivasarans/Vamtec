{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React PG CONNECTION\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountryStateComponent() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n\n  // Fetch countries when component mounts\n  useEffect(() => {\n    fetch('http://localhost:5000/countries').then(response => response.json()).then(data => setCountries(data)).catch(error => console.error('Error fetching countries:', error));\n  }, []);\n\n  // Fetch states when selected country changes\n  useEffect(() => {\n    if (selectedCountry) {\n      console.log('Selected Country:', selectedCountry); // Log selected country\n      fetch(`http://localhost:5000/register/states/${selectedCountry}`).then(response => response.json()).then(data => setStates(data)).catch(error => console.error('Error fetching states:', error));\n    }\n  }, [selectedCountry]);\n\n  // Handle country selection\n  const handleCountryChange = event => {\n    setSelectedCountry(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleCountryChange,\n      value: selectedCountry,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--Select Country--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.country_name,\n        children: country.country_name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"States:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: states.map((state, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: state.state_name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(CountryStateComponent, \"dlsURZL7ikiI4vpncxYRHM8sSJQ=\");\n_c = CountryStateComponent;\nexport default CountryStateComponent;\nvar _c;\n$RefreshReg$(_c, \"CountryStateComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountryStateComponent","_s","countries","setCountries","states","setStates","selectedCountry","setSelectedCountry","fetch","then","response","json","data","catch","error","console","log","handleCountryChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","country","index","country_name","state","state_name","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React PG CONNECTION/src/components/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction CountryStateComponent() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n\r\n  // Fetch countries when component mounts\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/countries')\r\n      .then(response => response.json())\r\n      .then(data => setCountries(data))\r\n      .catch(error => console.error('Error fetching countries:', error));\r\n  }, []);\r\n\r\n  // Fetch states when selected country changes\r\n  useEffect(() => {\r\n    if (selectedCountry) {\r\n      console.log('Selected Country:', selectedCountry);  // Log selected country\r\n      fetch(`http://localhost:5000/register/states/${selectedCountry}`)\r\n        .then(response => response.json())\r\n        .then(data => setStates(data))\r\n        .catch(error => console.error('Error fetching states:', error));\r\n    }\r\n  }, [selectedCountry]);\r\n\r\n  // Handle country selection\r\n  const handleCountryChange = (event) => {\r\n    setSelectedCountry(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Select Country</h1>\r\n      <select onChange={handleCountryChange} value={selectedCountry}>\r\n        <option value=\"\">--Select Country--</option>\r\n        {countries.map((country, index) => (\r\n          <option key={index} value={country.country_name}>\r\n            {country.country_name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <h2>States:</h2>\r\n      <ul>\r\n        {states.map((state, index) => (\r\n          <li key={index}>{state.state_name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryStateComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}