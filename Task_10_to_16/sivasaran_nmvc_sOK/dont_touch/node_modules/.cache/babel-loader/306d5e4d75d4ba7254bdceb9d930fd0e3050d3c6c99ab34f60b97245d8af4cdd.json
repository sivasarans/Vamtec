{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React Router\\\\src\\\\components\\\\State.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { dbx } from '../App'; // Assuming dbx is imported from App.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction State() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    country: '',\n    stateName: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [displayData, setDisplayData] = useState([]);\n  const [countryList, setCountryList] = useState([]); // For holding countries from the DB\n  const [editId, setEditId] = useState(null);\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n  const fetchCountries = () => {\n    if (dbx) {\n      const countryGet = dbx.transaction(\"country\", \"readonly\").objectStore(\"country\").getAll();\n      countryGet.onsuccess = e => {\n        setCountryList(e.target.result);\n        console.log(\"Countries fetched successfully!\");\n      };\n      countryGet.onerror = e => {\n        console.error(\"Error fetching countries:\", e.target.error);\n      };\n    } else {\n      console.log(\"dbx error (not initialized)\");\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [id]: value\n    });\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [id]: ''\n    })); // Clear error for the input\n  };\n  const validateForm = () => {\n    const formErrors = {};\n    if (!formData.country) {\n      formErrors.country = \"Please select a country.\";\n    }\n    if (!formData.stateName) {\n      formErrors.stateName = \"State name is required.\";\n    } else if (formData.stateName.length < 3) {\n      formErrors.stateName = \"State name should be at least 3 characters.\";\n    }\n    setErrors(formErrors);\n    return Object.keys(formErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      if (!editId) {\n        alert(\"State added successfully!\");\n        if (dbx) {\n          const stateAdd = dbx.transaction(\"state\", \"readwrite\").objectStore(\"state\").add(formData);\n          stateAdd.onsuccess = () => {\n            console.log(\"State added successfully!\");\n            fetchStates();\n            setFormData({\n              country: '',\n              stateName: ''\n            });\n          };\n          stateAdd.onerror = () => console.error(\"Error adding state.\");\n        } else {\n          console.log(\"dbx error (not initialized)\");\n        }\n      } else {\n        alert(\"State updated successfully!\");\n        if (dbx) {\n          const stateUpdate = dbx.transaction(\"state\", \"readwrite\").objectStore(\"state\").put({\n            ...formData,\n            id: editId\n          });\n          stateUpdate.onsuccess = () => {\n            console.log(\"State updated successfully!\");\n            fetchStates();\n            setFormData({\n              country: '',\n              stateName: ''\n            });\n            setEditId(null); // Reset edit mode\n          };\n          stateUpdate.onerror = () => console.error(\"Error updating state.\");\n        } else {\n          console.log(\"dbx error (not initialized)\");\n        }\n      }\n    }\n  };\n  const fetchStates = () => {\n    if (dbx) {\n      const stateGet = dbx.transaction(\"state\", \"readonly\").objectStore(\"state\").getAll();\n      stateGet.onsuccess = e => {\n        setDisplayData(e.target.result);\n        console.log(\"States fetched successfully!\");\n      };\n      stateGet.onerror = e => {\n        console.error(\"Error fetching states:\", e.target.error);\n      };\n    } else {\n      console.log(\"dbx error (not initialized)\");\n    }\n  };\n  const handleDelete = id => {\n    if (dbx) {\n      const stateDelete = dbx.transaction(\"state\", \"readwrite\").objectStore(\"state\").delete(id);\n      stateDelete.onsuccess = () => {\n        console.log(`State with ID ${id} deleted successfully.`);\n        fetchStates();\n      };\n      stateDelete.onerror = e => {\n        console.error(\"Error deleting data:\", e.target.error);\n      };\n    } else {\n      console.log(\"dbx error (not initialized)\");\n    }\n  };\n  const handleEdit = id => {\n    if (dbx) {\n      const stateStore = dbx.transaction(\"state\", \"readwrite\").objectStore(\"state\");\n      const request = stateStore.get(id);\n      request.onsuccess = e => {\n        const data = e.target.result;\n        setFormData({\n          ...data\n        });\n        setEditId(id); // Enter edit mode\n      };\n      request.onerror = e => {\n        console.error(\"Error retrieving data for editing:\", e.target.error);\n      };\n    } else {\n      console.log(\"dbx error (not initialized)\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 flex items-center justify-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"rounded border-gray-300 bg-gray-500 text-white p-2 mb-4\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Add/Update State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"stateForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"country\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Select Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"country\",\n            value: formData.country,\n            onChange: handleInputChange,\n            className: \"mt-1 block w-full p-2 border border-gray-300 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose a country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), countryList.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country.name,\n              children: country.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), errors.country && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"stateName\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"State Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"stateName\",\n            value: formData.stateName,\n            onChange: handleInputChange,\n            className: \"mt-1 block w-full p-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), errors.stateName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.stateName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600\",\n          children: editId ? \"Update State\" : \"Add State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mt-6 mb-4\",\n        children: \"States List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchStates,\n        className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600 mb-4\",\n        children: \"Load States\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"State Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayData.map((value, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-1 px-2\",\n              children: value.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-1 px-2\",\n              children: value.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-1 px-2\",\n              children: value.stateName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-1 px-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(value.id),\n                className: \"text-blue-500\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-1 px-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(value.id),\n                className: \"text-red-500\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n_s(State, \"gNw+tt39vlrtM0SBJZDNaQPzlEU=\", false, function () {\n  return [useNavigate];\n});\n_c = State;\nexport default State;\nvar _c;\n$RefreshReg$(_c, \"State\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","dbx","jsxDEV","_jsxDEV","State","_s","navigate","formData","setFormData","country","stateName","errors","setErrors","displayData","setDisplayData","countryList","setCountryList","editId","setEditId","fetchCountries","countryGet","transaction","objectStore","getAll","onsuccess","e","target","result","console","log","onerror","error","handleInputChange","id","value","prevErrors","validateForm","formErrors","length","Object","keys","handleSubmit","preventDefault","alert","stateAdd","add","fetchStates","stateUpdate","put","stateGet","handleDelete","stateDelete","delete","handleEdit","stateStore","request","get","data","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","map","index","name","type","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React Router/src/components/State.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { dbx } from '../App';  // Assuming dbx is imported from App.js\r\n\r\nfunction State() {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({ country: '', stateName: '' });\r\n    const [errors, setErrors] = useState({});\r\n    const [displayData, setDisplayData] = useState([]);\r\n    const [countryList, setCountryList] = useState([]); // For holding countries from the DB\r\n    const [editId, setEditId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchCountries();\r\n    }, []);\r\n\r\n    const fetchCountries = () => {\r\n        if (dbx) {\r\n            const countryGet = dbx.transaction(\"country\", \"readonly\").objectStore(\"country\").getAll();\r\n            countryGet.onsuccess = (e) => {\r\n                setCountryList(e.target.result);\r\n                console.log(\"Countries fetched successfully!\");\r\n            };\r\n            countryGet.onerror = (e) => {\r\n                console.error(\"Error fetching countries:\", e.target.error);\r\n            };\r\n        } else {\r\n            console.log(\"dbx error (not initialized)\");\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setFormData({ ...formData, [id]: value });\r\n        setErrors((prevErrors) => ({ ...prevErrors, [id]: '' })); // Clear error for the input\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const formErrors = {};\r\n        if (!formData.country) {\r\n            formErrors.country = \"Please select a country.\";\r\n        }\r\n        if (!formData.stateName) {\r\n            formErrors.stateName = \"State name is required.\";\r\n        } else if (formData.stateName.length < 3) {\r\n            formErrors.stateName = \"State name should be at least 3 characters.\";\r\n        }\r\n        setErrors(formErrors);\r\n        return Object.keys(formErrors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm()) {\r\n            if (!editId) {\r\n                alert(\"State added successfully!\");\r\n                if (dbx) {\r\n                    const stateAdd = dbx.transaction(\"state\", \"readwrite\").objectStore(\"state\").add(formData);\r\n                    stateAdd.onsuccess = () => {\r\n                        console.log(\"State added successfully!\");\r\n                        fetchStates();\r\n                        setFormData({ country: '', stateName: '' });\r\n                    };\r\n                    stateAdd.onerror = () => console.error(\"Error adding state.\");\r\n                } else {\r\n                    console.log(\"dbx error (not initialized)\");\r\n                }\r\n            } else {\r\n                alert(\"State updated successfully!\");\r\n                if (dbx) {\r\n                    const stateUpdate = dbx.transaction(\"state\", \"readwrite\").objectStore(\"state\").put({ ...formData, id: editId });\r\n                    stateUpdate.onsuccess = () => {\r\n                        console.log(\"State updated successfully!\");\r\n                        fetchStates();\r\n                        setFormData({ country: '', stateName: '' });\r\n                        setEditId(null); // Reset edit mode\r\n                    };\r\n                    stateUpdate.onerror = () => console.error(\"Error updating state.\");\r\n                } else {\r\n                    console.log(\"dbx error (not initialized)\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const fetchStates = () => {\r\n        if (dbx) {\r\n            const stateGet = dbx.transaction(\"state\", \"readonly\").objectStore(\"state\").getAll();\r\n            stateGet.onsuccess = (e) => {\r\n                setDisplayData(e.target.result);\r\n                console.log(\"States fetched successfully!\");\r\n            };\r\n            stateGet.onerror = (e) => {\r\n                console.error(\"Error fetching states:\", e.target.error);\r\n            };\r\n        } else {\r\n            console.log(\"dbx error (not initialized)\");\r\n        }\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        if (dbx) {\r\n            const stateDelete = dbx.transaction(\"state\", \"readwrite\").objectStore(\"state\").delete(id);\r\n            stateDelete.onsuccess = () => {\r\n                console.log(`State with ID ${id} deleted successfully.`);\r\n                fetchStates();\r\n            };\r\n            stateDelete.onerror = (e) => {\r\n                console.error(\"Error deleting data:\", e.target.error);\r\n            };\r\n        } else {\r\n            console.log(\"dbx error (not initialized)\");\r\n        }\r\n    };\r\n\r\n    const handleEdit = (id) => {\r\n        if (dbx) {\r\n            const stateStore = dbx.transaction(\"state\", \"readwrite\").objectStore(\"state\");\r\n            const request = stateStore.get(id);\r\n            request.onsuccess = (e) => {\r\n                const data = e.target.result;\r\n                setFormData({ ...data });\r\n                setEditId(id); // Enter edit mode\r\n            };\r\n            request.onerror = (e) => {\r\n                console.error(\"Error retrieving data for editing:\", e.target.error);\r\n            };\r\n        } else {\r\n            console.log(\"dbx error (not initialized)\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gray-100 flex items-center justify-center h-screen\">\r\n            <div className=\"bg-white p-6 rounded shadow-md w-96\">\r\n                <button onClick={() => navigate('/')} className=\"rounded border-gray-300 bg-gray-500 text-white p-2 mb-4\">\r\n                    Back\r\n                </button>\r\n                <h2 className=\"text-2xl font-bold mb-4\">Add/Update State</h2>\r\n                <form id=\"stateForm\" onSubmit={handleSubmit}>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700\">Select Country</label>\r\n                        <select\r\n                            id=\"country\"\r\n                            value={formData.country}\r\n                            onChange={handleInputChange}\r\n                            className=\"mt-1 block w-full p-2 border border-gray-300 rounded\"\r\n                        >\r\n                            <option value=\"\">Choose a country</option>\r\n                            {countryList.map((country, index) => (\r\n                                <option key={index} value={country.name}>{country.name}</option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.country && <p className=\"text-red-500 text-sm\">{errors.country}</p>}\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"stateName\" className=\"block text-sm font-medium text-gray-700\">State Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"stateName\"\r\n                            value={formData.stateName}\r\n                            onChange={handleInputChange}\r\n                            className=\"mt-1 block w-full p-2 border border-gray-300 rounded\"\r\n                        />\r\n                        {errors.stateName && <p className=\"text-red-500 text-sm\">{errors.stateName}</p>}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600\">\r\n                        {editId ? \"Update State\" : \"Add State\"}\r\n                    </button>\r\n                </form>\r\n\r\n                <h2 className=\"text-xl font-bold mt-6 mb-4\">States List</h2>\r\n                <button onClick={fetchStates} className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600 mb-4\">\r\n                    Load States\r\n                </button>\r\n                <table className=\"min-w-full bg-white border border-gray-300\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"py-2 px-2 border-b text-left\">ID</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">Country</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">State Name</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">Edit</th>\r\n                            <th className=\"py-2 px-2 border-b text-left\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {displayData.map((value, index) => (\r\n                            <tr key={index}>\r\n                                <td className=\"py-1 px-2\">{value.id}</td>\r\n                                <td className=\"py-1 px-2\">{value.country}</td>\r\n                                <td className=\"py-1 px-2\">{value.stateName}</td>\r\n                                <td className=\"py-1 px-2\">\r\n                                    <button onClick={() => handleEdit(value.id)} className=\"text-blue-500\">Edit</button>\r\n                                </td>\r\n                                <td className=\"py-1 px-2\">\r\n                                    <button onClick={() => handleDelete(value.id)} className=\"text-red-500\">Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default State;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}