{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React PG CONNECTION\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\n// Map.js\nimport React, { useState, useEffect } from 'react';\n// import Register from './register today';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  useEffect(() => {\n    // Fetch the list of countries on component mount\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/countries');\n        const data = await response.json();\n        setCountries(data);\n      } catch (err) {\n        console.error('Error fetching countries:', err);\n      }\n    };\n    fetchCountries();\n  }, []);\n  useEffect(() => {\n    // Fetch states when the selected country changes\n    const fetchStates = async () => {\n      if (!selectedCountry) return;\n      try {\n        const response = await fetch(`http://localhost:5000/s1?countryName=${selectedCountry}`);\n        const data = await response.json();\n        setStates(data);\n      } catch (err) {\n        console.error('Error fetching states:', err);\n      }\n    };\n    fetchStates();\n  }, [selectedCountry]);\n  const handleCountryChange = e => {\n    setSelectedCountry(e.target.value);\n    setSelectedState(''); // Reset state selection when country changes\n  };\n  const handleStateChange = e => {\n    setSelectedState(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Country and State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Country: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCountry,\n        onChange: handleCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.country_name,\n          children: country.country_name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"State: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedState,\n        onChange: handleStateChange,\n        disabled: !selectedCountry,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state.state_name,\n          children: state.state_name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Country: \", selectedCountry]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected State: \", selectedState]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"yEaHWvtf+XHwhDHdC+CEWKTxmRY=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Register","_s","countries","setCountries","states","setStates","selectedCountry","setSelectedCountry","selectedState","setSelectedState","fetchCountries","response","fetch","data","json","err","console","error","fetchStates","handleCountryChange","e","target","value","handleStateChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","country","index","country_name","disabled","state","state_name","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React PG CONNECTION/src/components/Register.js"],"sourcesContent":["// Map.js\r\nimport React, { useState, useEffect } from 'react';\r\n// import Register from './register today';\r\n\r\nconst Register = () => {\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState('');\r\n    const [selectedState, setSelectedState] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch the list of countries on component mount\r\n        const fetchCountries = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/countries');\r\n                const data = await response.json();\r\n                setCountries(data);\r\n            } catch (err) {\r\n                console.error('Error fetching countries:', err);\r\n            }\r\n        };\r\n        fetchCountries();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Fetch states when the selected country changes\r\n        const fetchStates = async () => {\r\n            if (!selectedCountry) return;\r\n            try {\r\n              const response = await fetch(`http://localhost:5000/s1?countryName=${selectedCountry}`);\r\n              const data = await response.json();\r\n                setStates(data);\r\n            } catch (err) {\r\n                console.error('Error fetching states:', err);\r\n            }\r\n        };\r\n        fetchStates();\r\n    }, [selectedCountry]);\r\n\r\n    const handleCountryChange = (e) => {\r\n        setSelectedCountry(e.target.value);\r\n        setSelectedState(''); // Reset state selection when country changes\r\n    };\r\n\r\n    const handleStateChange = (e) => {\r\n        setSelectedState(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Select Country and State</h1>\r\n\r\n            {/* Country Dropdown */}\r\n            <div>\r\n                <label>Country: </label>\r\n                <select value={selectedCountry} onChange={handleCountryChange}>\r\n                    <option value=\"\">Select a Country</option>\r\n                    {countries.map((country, index) => (\r\n                        <option key={index} value={country.country_name}>\r\n                            {country.country_name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* State Dropdown */}\r\n            <div>\r\n                <label>State: </label>\r\n                <select value={selectedState} onChange={handleStateChange} disabled={!selectedCountry}>\r\n                    <option value=\"\">Select a State</option>\r\n                    {states.map((state, index) => (\r\n                        <option key={index} value={state.state_name}>\r\n                            {state.state_name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Display selected values */}\r\n            <div>\r\n                <p>Selected Country: {selectedCountry}</p>\r\n                <p>Selected State: {selectedState}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCX,YAAY,CAACU,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MACnD;IACJ,CAAC;IACDL,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACZ;IACA,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI,CAACZ,eAAe,EAAE;MACtB,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwCN,eAAe,EAAE,CAAC;QACvF,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAChCT,SAAS,CAACQ,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAChD;IACJ,CAAC;IACDG,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACZ,eAAe,CAAC,CAAC;EAErB,MAAMa,mBAAmB,GAAIC,CAAC,IAAK;IAC/Bb,kBAAkB,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAClCb,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMc,iBAAiB,GAAIH,CAAC,IAAK;IAC7BX,gBAAgB,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,oBACIvB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGjC7B,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB7B,OAAA;QAAQuB,KAAK,EAAEhB,eAAgB;QAACuB,QAAQ,EAAEV,mBAAoB;QAAAK,QAAA,gBAC1DzB,OAAA;UAAQuB,KAAK,EAAC,EAAE;UAAAE,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACzC1B,SAAS,CAAC4B,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC1BjC,OAAA;UAAoBuB,KAAK,EAAES,OAAO,CAACE,YAAa;UAAAT,QAAA,EAC3CO,OAAO,CAACE;QAAY,GADZD,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGN7B,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtB7B,OAAA;QAAQuB,KAAK,EAAEd,aAAc;QAACqB,QAAQ,EAAEN,iBAAkB;QAACW,QAAQ,EAAE,CAAC5B,eAAgB;QAAAkB,QAAA,gBAClFzB,OAAA;UAAQuB,KAAK,EAAC,EAAE;UAAAE,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACvCxB,MAAM,CAAC0B,GAAG,CAAC,CAACK,KAAK,EAAEH,KAAK,kBACrBjC,OAAA;UAAoBuB,KAAK,EAAEa,KAAK,CAACC,UAAW;UAAAZ,QAAA,EACvCW,KAAK,CAACC;QAAU,GADRJ,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGN7B,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,GAAG,oBAAkB,EAAClB,eAAe;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1C7B,OAAA;QAAAyB,QAAA,GAAG,kBAAgB,EAAChB,aAAa;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAjFID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAmFd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}