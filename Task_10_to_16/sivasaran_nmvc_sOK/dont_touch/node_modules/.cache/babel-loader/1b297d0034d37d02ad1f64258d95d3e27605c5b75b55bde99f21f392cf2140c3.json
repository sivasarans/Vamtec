{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React PG CONNECTION\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [states, setStates] = useState([]);\n\n  // Fetch countries on component mount\n  useEffect(() => {\n    async function fetchCountries() {\n      try {\n        const response = await fetch('http://localhost:5000/countries');\n        const data = await response.json();\n        setCountries(data); // Store country data for the dropdown\n      } catch (error) {\n        console.error('Error fetching countries:', error);\n      }\n    }\n    fetchCountries();\n  }, []);\n\n  // Fetch states based on selected country\n  useEffect(() => {\n    if (selectedCountry) {\n      async function fetchStates() {\n        try {\n          const response = await fetch(`http://localhost:5000/countries/states/${selectedCountry}`);\n          const data = await response.json();\n          setStates(data); // Store states for the dropdown\n        } catch (error) {\n          console.error('Error fetching states:', error);\n        }\n      }\n      fetchStates();\n    }\n  }, [selectedCountry]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"country\",\n      children: \"Select Country:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"country\",\n      value: selectedCountry,\n      onChange: e => setSelectedCountry(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.country_name,\n        children: country.country_name\n      }, country.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"state\",\n      children: \"Select State:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"state\",\n      disabled: !selectedCountry,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), states.length > 0 ? states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: state.state_name,\n        children: state.state_name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"No states available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"aDZ+YRxwe30vrbXs0UCz9ueG0+4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Register","_s","countries","setCountries","selectedCountry","setSelectedCountry","states","setStates","fetchCountries","response","fetch","data","json","error","console","fetchStates","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","country","country_name","disabled","length","state","index","state_name","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React PG CONNECTION/src/components/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Register() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [states, setStates] = useState([]);\r\n\r\n  // Fetch countries on component mount\r\n  useEffect(() => {\r\n    async function fetchCountries() {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/countries');\r\n        const data = await response.json();\r\n        setCountries(data);  // Store country data for the dropdown\r\n      } catch (error) {\r\n        console.error('Error fetching countries:', error);\r\n      }\r\n    }\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  // Fetch states based on selected country\r\n  useEffect(() => {\r\n    if (selectedCountry) {\r\n      async function fetchStates() {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/countries/states/${selectedCountry}`);\r\n          const data = await response.json();\r\n          setStates(data);  // Store states for the dropdown\r\n        } catch (error) {\r\n          console.error('Error fetching states:', error);\r\n        }\r\n      }\r\n      fetchStates();\r\n    }\r\n  }, [selectedCountry]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register</h1>\r\n      \r\n      {/* Country Dropdown */}\r\n      <label htmlFor=\"country\">Select Country:</label>\r\n      <select\r\n        id=\"country\"\r\n        value={selectedCountry}\r\n        onChange={(e) => setSelectedCountry(e.target.value)}\r\n      >\r\n        <option value=\"\">Select a Country</option>\r\n        {countries.map((country) => (\r\n          <option key={country.id} value={country.country_name}>\r\n            {country.country_name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      \r\n      {/* State Dropdown */}\r\n      <label htmlFor=\"state\">Select State:</label>\r\n      <select id=\"state\" disabled={!selectedCountry}>\r\n        <option value=\"\">Select a State</option>\r\n        {states.length > 0 ? (\r\n          states.map((state, index) => (\r\n            <option key={index} value={state.state_name}>\r\n              {state.state_name}\r\n            </option>\r\n          ))\r\n        ) : (\r\n          <option>No states available</option>\r\n        )}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}