{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React PG CONNECTION\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    organization: '',\n    email: '',\n    password: '',\n    numUsers: '',\n    mobile: '',\n    country: '',\n    state: '',\n    expireDays: '',\n    photo: null\n  });\n  const [errors, setErrors] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [loading, setLoading] = useState(true);\n  const handleInputChange = ({\n    target: {\n      id,\n      value,\n      files\n    }\n  }) => {\n    setFormData({\n      ...formData,\n      [id]: value\n    });\n    setErrors({\n      ...errors,\n      [id]: ''\n    });\n  };\n  useEffect(() => {\n    // Fetch countries on component mount\n    fetch('http://localhost:5000/register/countries').then(response => response.json()).then(data => setCountries(data)).catch(error => console.error('Error fetching countries:', error));\n  }, []);\n  useEffect(() => {\n    if (selectedCountry) {\n      // Fetch states based on selected country\n      fetch(`http://localhost:5000/register/states/${selectedCountry}`).then(response => response.json()).then(data => setStates(data)).catch(error => console.error('Error fetching states:', error));\n    }\n  }, [selectedCountry]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col space-y-4 w-full max-w-4xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            value: formData.name,\n            onChange: handleInputChange,\n            className: \"border p-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"country\",\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"country\",\n            onChange: e => setSelectedCountry(e.target.value),\n            value: selectedCountry,\n            className: \"border p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country.country_name,\n              children: country.country_name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), errors.country && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), selectedCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"state\",\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"state\",\n            onChange: handleInputChange,\n            value: formData.state,\n            className: \"border p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: state.state_name,\n              children: state.state_name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), errors.state && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"border border-green-200 text-black bg-purple-500 m-3 p-3 rounded-md w-full\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"3SvfSJ0/OxaZJU3QO7gbXeTryOA=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useCallback","useEffect","useState","NavLink","useNavigate","jsxDEV","_jsxDEV","Register","_s","navigate","formData","setFormData","name","organization","email","password","numUsers","mobile","country","state","expireDays","photo","errors","setErrors","countries","setCountries","states","setStates","selectedCountry","setSelectedCountry","loading","setLoading","handleInputChange","target","id","value","files","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","onChange","e","map","index","country_name","state_name","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React PG CONNECTION/src/components/Register.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\n\r\nfunction Register() {\r\n    const navigate = useNavigate();\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '', organization: '', email: '', password: '', numUsers: '',\r\n        mobile: '', country: '', state: '', expireDays: '', photo: null\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const handleInputChange = ({ target: { id, value, files } }) => {\r\n        setFormData({ ...formData, [id]: value });\r\n        setErrors({ ...errors, [id]: '' });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch countries on component mount\r\n        fetch('http://localhost:5000/register/countries')\r\n            .then(response => response.json())\r\n            .then(data => setCountries(data))\r\n            .catch(error => console.error('Error fetching countries:', error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedCountry) {\r\n            // Fetch states based on selected country\r\n            fetch(`http://localhost:5000/register/states/${selectedCountry}`)\r\n                .then(response => response.json())\r\n                .then(data => setStates(data))\r\n                .catch(error => console.error('Error fetching states:', error));\r\n        }\r\n    }, [selectedCountry]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Register</h2>\r\n            <div className=\"flex flex-col space-y-4 w-full max-w-4xl mx-auto p-4\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                    <div className=\"flex flex-col\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            value={formData.name}\r\n                            onChange={handleInputChange}\r\n                            className=\"border p-2\"\r\n                        />\r\n                        {errors.name && <span className=\"text-red-500 text-sm\">{errors.name}</span>}\r\n                    </div>\r\n\r\n                    {/* Country Dropdown */}\r\n                    <div className=\"flex flex-col\">\r\n                        <label htmlFor=\"country\">Country</label>\r\n                        <select\r\n                            id=\"country\"\r\n                            onChange={(e) => setSelectedCountry(e.target.value)}\r\n                            value={selectedCountry}\r\n                            className=\"border p-2\"\r\n                        >\r\n                            <option value=\"\">Select a Country</option>\r\n                            {countries.map((country, index) => (\r\n                                <option key={index} value={country.country_name}>\r\n                                    {country.country_name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.country && <span className=\"text-red-500 text-sm\">{errors.country}</span>}\r\n                    </div>\r\n\r\n                    {/* State Dropdown */}\r\n                    {selectedCountry && (\r\n                        <div className=\"flex flex-col\">\r\n                            <label htmlFor=\"state\">State</label>\r\n                            <select\r\n                                id=\"state\"\r\n                                onChange={handleInputChange}\r\n                                value={formData.state}\r\n                                className=\"border p-2\"\r\n                            >\r\n                                <option value=\"\">Select a State</option>\r\n                                {states.map((state, index) => (\r\n                                    <option key={index} value={state.state_name}>\r\n                                        {state.state_name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            {errors.state && <span className=\"text-red-500 text-sm\">{errors.state}</span>}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"border border-green-200 text-black bg-purple-500 m-3 p-3 rounded-md w-full\">\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}