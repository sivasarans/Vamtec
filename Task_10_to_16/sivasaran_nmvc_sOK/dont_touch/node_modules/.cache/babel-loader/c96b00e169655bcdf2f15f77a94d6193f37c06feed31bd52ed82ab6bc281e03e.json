{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React PG CONNECTION\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport RegisterTable from './RegisterTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    organization: '',\n    email: '',\n    password: '',\n    numUsers: '',\n    mobile: '',\n    country: '',\n    state: '',\n    expireDays: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [error, setError] = useState(null);\n  const [editId, setEditId] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState(''); // To store selected country\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const handleInputChange = ({\n    target: {\n      id,\n      value\n    }\n  }) => {\n    setFormData({\n      ...formData,\n      [id]: value\n    });\n    setErrors({\n      ...errors,\n      [id]: ''\n    });\n  };\n  const validateForm = () => {\n    const formErrors = {};\n    if (!formData.name) formErrors.name = \"Required\";\n    if (!formData.organization) formErrors.organization = \"Required\";\n    if (!formData.email) formErrors.email = !/\\S+@\\S+\\.\\S+/.test(formData.email) ? \"Invalid Email\" : \"Required\";\n    if (!formData.password || formData.password.length < 6) formErrors.password = \"Min 6 chars\";\n    if (!formData.numUsers || isNaN(formData.numUsers) || formData.numUsers <= 0) formErrors.numUsers = \"Invalid number\";\n    if (!formData.mobile || !/^\\d{10}$/.test(formData.mobile)) formErrors.mobile = \"Invalid mobile\";\n    if (!formData.country) formErrors.country = \"Required\";\n    if (!formData.state) formErrors.state = \"Required\";\n    if (!formData.expireDays || isNaN(Date.parse(formData.expireDays))) formErrors.expireDays = \"Invalid days\";\n    setErrors(formErrors);\n    return !Object.keys(formErrors).length;\n  };\n\n  // const handleSubmit = async (e) => {\n  //   console.log(formData);\n  //     e.preventDefault();\n  //     if (validateForm()) {\n  //         const method = editId ? 'PUT' : 'POST';\n  //         const url = editId ? `/register/${editId}` : '/register';\n\n  //         try {\n  //             const response = await fetch(url, {\n  //                 method,\n  //                 headers: { 'Content-Type': 'application/json' },\n  //                 body: JSON.stringify(formData),\n  //             });\n  //             if (response.ok) {\n  //                 alert(editId ? 'User updated successfully!' : 'User added successfully!');\n  //                 setFormData({ name: '', organization: '', email: '', password: '', numUsers: '', mobile: '', country: '', state: '', expireDays: '' });\n  //                 setEditId(null);\n  //                 fetchUsers(); // Reload users after update\n  //             } else {\n  //                 console.error('Failed to submit form data.');\n  //             }\n  //         } catch (err) {\n  //             console.error('Error:', err);\n  //         }\n  //     }\n  // };\n\n  //   const handleSubmit = async (e) => {\n  //     e.preventDefault();\n\n  //     try {\n  //         const response = await fetch('http://localhost:5000/register1', {\n  //             method: 'POST',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //             },\n  //             body: JSON.stringify(formData), // Replace formData with your state\n  //         });\n\n  //         if (!response.ok) {\n  //             throw new Error('Failed to submit form data.');\n  //         }\n\n  //         const result = await response.json();\n  //         console.log(result);\n  //     } catch (err) {\n  //         console.error(err.message);\n  //     }\n  // };\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault(); // Prevent default form submission behavior\n\n  //   // Log the current form data (for debugging purposes)\n  //   console.log('Form data submitted:', formData);\n\n  //   if (validateForm()) {\n  //       // Determine HTTP method and URL based on edit mode\n  //       const method = editId ? 'PUT' : 'POST';\n  //       const url = editId ? `/register/${editId}` : '/register';\n\n  //       try {\n  //           // Send the form data to the server\n  //           const response = await fetch(url, {\n  //               method,\n  //               headers: { 'Content-Type': 'application/json' },\n  //               body: JSON.stringify(formData),\n  //           });\n\n  //           // Handle the server response\n  //           if (response.ok) {\n  //               const successMessage = editId ? 'User updated successfully!' : 'User added successfully!';\n  //               alert(successMessage);\n\n  //               // Reset form data after successful submission\n  //               setFormData({\n  //                   name: '',\n  //                   organization: '',\n  //                   email: '',\n  //                   password: '',\n  //                   numUsers: '',\n  //                   mobile: '',\n  //                   country: '',\n  //                   state: '',\n  //                   expireDays: '',\n  //               });\n\n  //               setEditId(null); // Exit edit mode if applicable\n  //               fetchUsers(); // Reload the user list\n  //           } else {\n  //               console.error('Failed to submit form data. Response status:', response.status);\n  //               alert('Error submitting data. Please try again.');\n  //           }\n  //       } catch (err) {\n  //           console.error('Error submitting form:', err);\n  //           alert('An unexpected error occurred. Please try again.');\n  //       }\n  //   }\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Form Data:\", formData); // Debugging form data\n\n    if (validateForm()) {\n      console.log(\"Form Data:\", formData); // Debugging form data\n\n      const method = editId ? 'PUT' : 'POST';\n      const url = editId ? `http://localhost:5000/register/${editId}` : 'http://localhost:5000/register/'; // Correct backend endpoint\n\n      try {\n        const response = await fetch(url, {\n          method,\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        if (response.ok) {\n          alert(editId ? 'User updated successfully!' : 'User added successfully!');\n          setFormData({\n            name: '',\n            organization: '',\n            email: '',\n            password: '',\n            numUsers: '',\n            mobile: '',\n            country: '',\n            state: '',\n            expireDays: ''\n          });\n          setEditId(null);\n          //   fetchUsers(); // Reload user list\n        } else {\n          console.error('Failed to submit form data. Response status:', response.status);\n          alert('Error submitting data. Please try again.');\n        }\n      } catch (err) {\n        console.error('Error submitting form:', err);\n        alert('An unexpected error occurred. Please try again.');\n      }\n    }\n  };\n\n  //   const fetchUsers = async () => {\n  //       try {\n  //           const response = await fetch('/register');\n  //           const data = await response.json();\n  //           // setUsers(data); // Populate the table\n  //       } catch (err) {\n  //           console.error('Error fetching users:', err);\n  //       }\n  //   };\n\n  // const handleDelete = async (id) => {\n  //     if (window.confirm('Are you sure you want to delete this user?')) {\n  //         try {\n  //             const response = await fetch(`/register/${id}`, { method: 'DELETE' });\n  //             if (response.ok) {\n  //                 alert('User deleted successfully');\n  //             } else {\n  //                 console.error('Failed to delete user.');\n  //             }\n  //         } catch (err) {\n  //             console.error('Error:', err);}}};\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/countries');\n        const data = await response.json();\n        setCountries(data); // Set countries to the state\n      } catch (err) {\n        console.error('Error fetching countries:', err);\n      }\n    };\n    fetchCountries();\n  }, []);\n\n  // Fetch the states based on the selected country\n  const fetchStates = async countryName => {\n    if (!countryName) return; // If no country is selected, don't fetch states\n    try {\n      const response = await fetch(`http://localhost:5000/countries/fetchStateByCountry/${countryName}`);\n      const data = await response.json();\n      setStates(data); // Set states to the state\n      setError(null); // Clear any previous errors\n    } catch (err) {\n      console.error('Error fetching states:', err);\n      setError('No states found for the selected country.');\n      setStates([]);\n    }\n  }; // Clear states if there's an error\n  const handleCountryChange = event => {\n    // const countryName = event.target.value;\n    setSelectedCountry(countryName);\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      country: event.target.value // Update country in formData\n    }));\n    fetchStates(countryName); // Fetch states when country is selected\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-5\",\n        children: \"Registered Users (Router)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-4 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/country\",\n          className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600 mb-4\",\n          children: \"Add Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/state\",\n          className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600 mb-4\",\n          children: \"Add State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col space-y-4 w-full max-w-4xl mx-auto p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"name\",\n              type: \"text\",\n              value: formData.name,\n              onChange: handleInputChange,\n              className: \"border p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"organization\",\n              children: \"Organization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"organization\",\n              type: \"text\",\n              value: formData.organization,\n              onChange: handleInputChange,\n              className: \"border p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this), errors.organization && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.organization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              className: \"border p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              className: \"border p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"numUsers\",\n              children: \"Number of Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"numUsers\",\n              type: \"number\",\n              value: formData.numUsers,\n              onChange: handleInputChange,\n              className: \"border p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this), errors.numUsers && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.numUsers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mobile\",\n              children: \"Mobile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"mobile\",\n              type: \"text\",\n              value: formData.mobile,\n              onChange: handleInputChange,\n              className: \"border p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), errors.mobile && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Country: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"country\",\n              onChange: handleCountryChange\n              //  value={selectedCountry} \n              ,\n              value: formData.country,\n              className: \"border p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 33\n              }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: country.country_name,\n                children: country.country_name\n              }, country.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this), errors.country && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select State: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"state\",\n              value: formData.state,\n              onChange: handleInputChange,\n              className: \"border p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 37\n              }, this), states.length > 0 ? states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: state.state_name,\n                children: state.state_name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 41\n              }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"No states available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 33\n            }, this), errors.state && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 33\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"expireDays\",\n              children: \"Expire Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"expireDays\",\n              type: \"date\",\n              value: formData.expireDays,\n              onChange: handleInputChange,\n              className: \"border p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, this), errors.expireDays && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.expireDays\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"border border-green-200 text-black bg-purple-500 m-3 p-3 rounded-md w-full\",\n          children: isEditing ? \"Update\" : \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-black text-center text-3xl mb-4\",\n      children: \"User Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RegisterTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"ZG6hftABsi13f9nH4DrvGrPwy2I=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useCallback","useEffect","useState","React","NavLink","RegisterTable","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","name","organization","email","password","numUsers","mobile","country","state","expireDays","errors","setErrors","error","setError","editId","setEditId","selectedCountry","setSelectedCountry","isEditing","setIsEditing","countries","setCountries","states","setStates","handleInputChange","target","id","value","validateForm","formErrors","test","length","isNaN","Date","parse","Object","keys","handleSubmit","e","preventDefault","console","log","method","url","response","fetch","headers","body","JSON","stringify","ok","alert","status","err","fetchCountries","data","json","fetchStates","countryName","handleCountryChange","event","prevFormData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","htmlFor","type","onChange","map","country_name","index","state_name","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React PG CONNECTION/src/components/Register.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport RegisterTable from './RegisterTable';\r\n\r\n\r\nfunction Register() {\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '', organization: '', email: '', password: '', numUsers: '',\r\n        mobile: '', country: '', state: '', expireDays: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [error, setError] = useState(null);\r\n\r\n    const [editId, setEditId] = useState(null);\r\n    const [selectedCountry, setSelectedCountry] = useState('');  // To store selected country\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n    const handleInputChange = ({ target: { id, value } }) => {\r\n        setFormData({ ...formData, [id]: value });\r\n        setErrors({ ...errors, [id]: '' })};\r\n\r\n    const validateForm = () => {\r\n        const formErrors = {};\r\n        if (!formData.name) formErrors.name = \"Required\";\r\n        if (!formData.organization) formErrors.organization = \"Required\";\r\n        if (!formData.email) formErrors.email = !/\\S+@\\S+\\.\\S+/.test(formData.email) ? \"Invalid Email\" : \"Required\";\r\n        if (!formData.password || formData.password.length < 6) formErrors.password = \"Min 6 chars\";\r\n        if (!formData.numUsers || isNaN(formData.numUsers) || formData.numUsers <= 0) formErrors.numUsers = \"Invalid number\";\r\n        if (!formData.mobile || !/^\\d{10}$/.test(formData.mobile)) formErrors.mobile = \"Invalid mobile\";\r\n        if (!formData.country) formErrors.country = \"Required\";\r\n        if (!formData.state) formErrors.state = \"Required\";\r\n        if (!formData.expireDays || (isNaN(Date.parse(formData.expireDays)))) formErrors.expireDays = \"Invalid days\";\r\n\r\n        setErrors(formErrors);\r\n        return !Object.keys(formErrors).length;\r\n    };\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   console.log(formData);\r\n  //     e.preventDefault();\r\n  //     if (validateForm()) {\r\n  //         const method = editId ? 'PUT' : 'POST';\r\n  //         const url = editId ? `/register/${editId}` : '/register';\r\n  \r\n  //         try {\r\n  //             const response = await fetch(url, {\r\n  //                 method,\r\n  //                 headers: { 'Content-Type': 'application/json' },\r\n  //                 body: JSON.stringify(formData),\r\n  //             });\r\n  //             if (response.ok) {\r\n  //                 alert(editId ? 'User updated successfully!' : 'User added successfully!');\r\n  //                 setFormData({ name: '', organization: '', email: '', password: '', numUsers: '', mobile: '', country: '', state: '', expireDays: '' });\r\n  //                 setEditId(null);\r\n  //                 fetchUsers(); // Reload users after update\r\n  //             } else {\r\n  //                 console.error('Failed to submit form data.');\r\n  //             }\r\n  //         } catch (err) {\r\n  //             console.error('Error:', err);\r\n  //         }\r\n  //     }\r\n  // };\r\n  \r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//         const response = await fetch('http://localhost:5000/register1', {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify(formData), // Replace formData with your state\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//             throw new Error('Failed to submit form data.');\r\n//         }\r\n\r\n//         const result = await response.json();\r\n//         console.log(result);\r\n//     } catch (err) {\r\n//         console.error(err.message);\r\n//     }\r\n// };\r\n\r\n\r\n// const handleSubmit = async (e) => {\r\n//   e.preventDefault(); // Prevent default form submission behavior\r\n\r\n//   // Log the current form data (for debugging purposes)\r\n//   console.log('Form data submitted:', formData);\r\n\r\n//   if (validateForm()) {\r\n//       // Determine HTTP method and URL based on edit mode\r\n//       const method = editId ? 'PUT' : 'POST';\r\n//       const url = editId ? `/register/${editId}` : '/register';\r\n\r\n//       try {\r\n//           // Send the form data to the server\r\n//           const response = await fetch(url, {\r\n//               method,\r\n//               headers: { 'Content-Type': 'application/json' },\r\n//               body: JSON.stringify(formData),\r\n//           });\r\n\r\n//           // Handle the server response\r\n//           if (response.ok) {\r\n//               const successMessage = editId ? 'User updated successfully!' : 'User added successfully!';\r\n//               alert(successMessage);\r\n\r\n//               // Reset form data after successful submission\r\n//               setFormData({\r\n//                   name: '',\r\n//                   organization: '',\r\n//                   email: '',\r\n//                   password: '',\r\n//                   numUsers: '',\r\n//                   mobile: '',\r\n//                   country: '',\r\n//                   state: '',\r\n//                   expireDays: '',\r\n//               });\r\n\r\n//               setEditId(null); // Exit edit mode if applicable\r\n//               fetchUsers(); // Reload the user list\r\n//           } else {\r\n//               console.error('Failed to submit form data. Response status:', response.status);\r\n//               alert('Error submitting data. Please try again.');\r\n//           }\r\n//       } catch (err) {\r\n//           console.error('Error submitting form:', err);\r\n//           alert('An unexpected error occurred. Please try again.');\r\n//       }\r\n//   }\r\n// };\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  console.log(\"Form Data:\", formData); // Debugging form data\r\n\r\n\r\n  if (validateForm()) {\r\n    console.log(\"Form Data:\", formData); // Debugging form data\r\n\r\n      const method = editId ? 'PUT' : 'POST';\r\n      const url = editId \r\n          ? `http://localhost:5000/register/${editId}` \r\n          : 'http://localhost:5000/register/'; // Correct backend endpoint\r\n\r\n      try {\r\n          const response = await fetch(url, {\r\n              method,\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(formData),\r\n          });\r\n\r\n          if (response.ok) {\r\n              alert(editId ? 'User updated successfully!' : 'User added successfully!');\r\n              setFormData({\r\n                  name: '',\r\n                  organization: '',\r\n                  email: '',\r\n                  password: '',\r\n                  numUsers: '',\r\n                  mobile: '',\r\n                  country: '',\r\n                  state: '',\r\n                  expireDays: '',\r\n              });\r\n              setEditId(null);\r\n            //   fetchUsers(); // Reload user list\r\n          } else {\r\n              console.error('Failed to submit form data. Response status:', response.status);\r\n              alert('Error submitting data. Please try again.');\r\n          }\r\n      } catch (err) {\r\n          console.error('Error submitting form:', err);\r\n          alert('An unexpected error occurred. Please try again.');\r\n      }\r\n  }\r\n};\r\n\r\n//   const fetchUsers = async () => {\r\n//       try {\r\n//           const response = await fetch('/register');\r\n//           const data = await response.json();\r\n//           // setUsers(data); // Populate the table\r\n//       } catch (err) {\r\n//           console.error('Error fetching users:', err);\r\n//       }\r\n//   };\r\n  \r\n  // const handleDelete = async (id) => {\r\n  //     if (window.confirm('Are you sure you want to delete this user?')) {\r\n  //         try {\r\n  //             const response = await fetch(`/register/${id}`, { method: 'DELETE' });\r\n  //             if (response.ok) {\r\n  //                 alert('User deleted successfully');\r\n  //             } else {\r\n  //                 console.error('Failed to delete user.');\r\n  //             }\r\n  //         } catch (err) {\r\n  //             console.error('Error:', err);}}};\r\n\r\n    useEffect(() => {\r\n        const fetchCountries = async () => {\r\n          try {\r\n            const response = await fetch('http://localhost:5000/countries');\r\n            const data = await response.json();\r\n            setCountries(data);  // Set countries to the state\r\n          } catch (err) { console.error('Error fetching countries:', err);\r\n          }    };    fetchCountries();  }, []);\r\n    \r\n      // Fetch the states based on the selected country\r\n      const fetchStates = async (countryName) => {\r\n        if (!countryName) return; // If no country is selected, don't fetch states\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/countries/fetchStateByCountry/${countryName}`);\r\n          const data = await response.json();\r\n          setStates(data);  // Set states to the state\r\n          setError(null);  // Clear any previous errors\r\n        } catch (err) {\r\n          console.error('Error fetching states:', err);\r\n          setError('No states found for the selected country.');\r\n          setStates([])}} // Clear states if there's an error\r\n      const handleCountryChange = (event) => {\r\n        // const countryName = event.target.value;\r\n        setSelectedCountry(countryName);\r\n        setFormData((prevFormData) => ({\r\n          ...prevFormData,\r\n          country: event.target.value, // Update country in formData\r\n      }));\r\n        fetchStates(countryName);  // Fetch states when country is selected\r\n      };\r\n    \r\n    return (\r\n        <div className=\"bg-gray-100 flex flex-col items-center\">\r\n            <div className=\"text-center mb-5\">\r\n                <h1 className=\"text-3xl font-bold mb-5\">Registered Users (Router)</h1>\r\n                <div className=\"flex justify-center gap-4 flex-wrap\">\r\n                    <NavLink to=\"/country\" className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600 mb-4\">\r\n                        Add Country\r\n                    </NavLink>\r\n                    <NavLink to=\"/state\" className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600 mb-4\">\r\n                        Add State\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n    \r\n            <div className=\"flex flex-col space-y-4 w-full max-w-4xl mx-auto p-4\">\r\n                <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded-lg shadow-md\">\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                        <div className=\"flex flex-col\">\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                value={formData.name}\r\n                                onChange={handleInputChange}\r\n                                className=\"border p-2\"\r\n                            />\r\n                            {errors.name && <span className=\"text-red-500 text-sm\">{errors.name}</span>}\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <label htmlFor=\"organization\">Organization</label>\r\n                            <input\r\n                                id=\"organization\"\r\n                                type=\"text\"\r\n                                value={formData.organization}\r\n                                onChange={handleInputChange}\r\n                                className=\"border p-2\"\r\n                            />\r\n                            {errors.organization && <span className=\"text-red-500 text-sm\">{errors.organization}</span>}\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleInputChange}\r\n                                className=\"border p-2\"\r\n                            />\r\n                            {errors.email && <span className=\"text-red-500 text-sm\">{errors.email}</span>}\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                value={formData.password}\r\n                                onChange={handleInputChange}\r\n                                className=\"border p-2\"\r\n                            />\r\n                            {errors.password && <span className=\"text-red-500 text-sm\">{errors.password}</span>}\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <label htmlFor=\"numUsers\">Number of Users</label>\r\n                            <input\r\n                                id=\"numUsers\"\r\n                                type=\"number\"\r\n                                value={formData.numUsers}\r\n                                onChange={handleInputChange}\r\n                                className=\"border p-2\"\r\n                            />\r\n                            {errors.numUsers && <span className=\"text-red-500 text-sm\">{errors.numUsers}</span>}\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <label htmlFor=\"mobile\">Mobile</label>\r\n                            <input\r\n                                id=\"mobile\"\r\n                                type=\"text\"\r\n                                value={formData.mobile}\r\n                                onChange={handleInputChange}\r\n                                className=\"border p-2\"\r\n                            />\r\n                            {errors.mobile && <span className=\"text-red-500 text-sm\">{errors.mobile}</span>}\r\n                        </div>\r\n                        \r\n                        <div>\r\n                                <label>Select Country: </label>\r\n                                <select id=\"country\" onChange={handleCountryChange}\r\n                                //  value={selectedCountry} \r\n                                value={formData.country}\r\n\r\n                                 className=\"border p-2\"                                >\r\n                                <option value=\"\">Select a Country</option>\r\n                                {countries.map((country) => (\r\n                                    <option key={country.id} value={country.country_name}>\r\n                                    {country.country_name}\r\n                                    </option>\r\n                                ))}\r\n                                </select>\r\n                                {errors.country && <span className=\"text-red-500 text-sm\">{errors.country}</span>}\r\n\r\n                            </div>\r\n\r\n                                <div>\r\n                                <label>Select State: </label>\r\n                                <select id=\"state\" \r\n                                 value={formData.state}\r\n                                 onChange={handleInputChange}\r\n                                 className=\"border p-2\">\r\n                                    <option value=\"\">Select a State</option>\r\n                                    {states.length > 0 ? (\r\n                                    states.map((state, index) => (\r\n                                        <option key={index} value={state.state_name}>\r\n                                        {state.state_name}\r\n                                        </option>\r\n                                    ))\r\n                                    ) : (\r\n                                    <option>No states available</option>\r\n                                    )}\r\n                                </select>\r\n                                {errors.state && <span className=\"text-red-500 text-sm\">{errors.state}</span>}\r\n\r\n                                </div>\r\n                            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n                        <div className=\"flex flex-col\">\r\n                            <label htmlFor=\"expireDays\">Expire Days</label>\r\n                            <input\r\n                                id=\"expireDays\"\r\n                                type=\"date\"\r\n                                value={formData.expireDays}\r\n                                onChange={handleInputChange}\r\n                                className=\"border p-2\"\r\n                            />\r\n                            {errors.expireDays && <span className=\"text-red-500 text-sm\">{errors.expireDays}</span>}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <button type=\"submit\" className=\"border border-green-200 text-black bg-purple-500 m-3 p-3 rounded-md w-full\">\r\n                        {isEditing ? \"Update\" : \"Submit\"}\r\n                    </button>\r\n\r\n                </form>\r\n            </div>\r\n    \r\n            <h2 className=\"text-black text-center text-3xl mb-4\">User Details</h2>\r\n            <RegisterTable />\r\n\r\n        </div>\r\n    )}\r\n    export default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}