{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task9\\\\4 nov class based\\\\react-start-task\\\\src\\\\components\\\\CustomerComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { sampleContext } from './ContextProvider'; // Import the context from ContextProvider\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerComponent = () => {\n  _s();\n  const contextValue = useContext(sampleContext); // Consume the context value\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: `Customer Component value: ${contextValue}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n};\n_s(CustomerComponent, \"LIxFXvZbUdXE/TWxKLLXMjM3Mig=\");\n_c = CustomerComponent;\nexport default CustomerComponent;\nvar _c;\n$RefreshReg$(_c, \"CustomerComponent\");","map":{"version":3,"names":["React","useContext","sampleContext","jsxDEV","_jsxDEV","CustomerComponent","_s","contextValue","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task9/4 nov class based/react-start-task/src/components/CustomerComponent.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { sampleContext } from './ContextProvider';  // Import the context from ContextProvider\r\n\r\nconst CustomerComponent = () => {\r\n  const contextValue = useContext(sampleContext);  // Consume the context value\r\n\r\n  return <p>{`Customer Component value: ${contextValue}`}</p>;\r\n};\r\n\r\nexport default CustomerComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,aAAa,QAAQ,mBAAmB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,YAAY,GAAGN,UAAU,CAACC,aAAa,CAAC,CAAC,CAAE;;EAEjD,oBAAOE,OAAA;IAAAI,QAAA,EAAI,6BAA6BD,YAAY;EAAE;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC7D,CAAC;AAACN,EAAA,CAJID,iBAAiB;AAAAQ,EAAA,GAAjBR,iBAAiB;AAMvB,eAAeA,iBAAiB;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}