{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\Task_11_to_16\\\\Task_16_React_Redux_toolkit_crud\\\\MyProject\\\\src\\\\components\\\\loginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout } from \"../redux/authSlice\";\nimport Register from \"./Register\";\nimport Country from \"./Country\";\nimport State from \"./State\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loginform = () => {\n  _s();\n  const [username, setusername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // To show error message\n\n  // Fix: Correctly use useSelector to get the state\n  const LogIn = useSelector(state => state.auth.LogIn);\n  const user = useSelector(state => state.auth.user);\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    // e.preventDefault();\n\n    if (!username || !password) {\n      setErrorMessage(\"Both fields are required.\");\n    } else {\n      // Reset error message if validation passes\n      setErrorMessage(\"\");\n      dispatch(login({\n        username,\n        password\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: LogIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-5\",\n        children: [\"Welcome \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-red-500 text-white font-bold py-2 px-4 rounded hover:bg-green-600 mb-4\",\n        onClick: () => dispatch(logout()),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        class: \"border border-green-500 bg-blue-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-5\",\n          children: \" Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          required: true,\n          className: \"mt-4 block w-full p-2 border border-green-500 rounded-md focus:outline-none focus:ring-2 focus:ring-green-300\",\n          onChange: e => setusername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"mt-1 block w-full p-2 border border-green-500 rounded-md\",\n          value: password,\n          onChange: e => setpassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 mt-2\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 text-white font-bold py-2 px-4 rounded hover:bg-red-600 mt-5 mb-4\",\n          onClick: () => handleSubmit(),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Loginform, \"rCOBsQEKZS7SFJRqm82k9emmHJc=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Loginform;\nexport default Loginform;\nvar _c;\n$RefreshReg$(_c, \"Loginform\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","login","logout","Register","Country","State","jsxDEV","_jsxDEV","Loginform","_s","username","setusername","password","setpassword","errorMessage","setErrorMessage","LogIn","state","auth","user","dispatch","handleSubmit","e","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","class","type","placeholder","value","required","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/Task_11_to_16/Task_16_React_Redux_toolkit_crud/MyProject/src/components/loginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, logout } from \"../redux/authSlice\";\r\nimport Register from \"./Register\";\r\nimport Country from \"./Country\";\r\nimport State from \"./State\";\r\n\r\nconst Loginform = () => {\r\n    const [username, setusername] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\"); // To show error message\r\n\r\n    \r\n    // Fix: Correctly use useSelector to get the state\r\n    const LogIn = useSelector((state) => state.auth.LogIn);\r\n    const user = useSelector((state) => state.auth.user);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        // e.preventDefault();\r\n\r\n        if (!username || !password) {\r\n            setErrorMessage(\"Both fields are required.\");\r\n        } else {\r\n            // Reset error message if validation passes\r\n            setErrorMessage(\"\");\r\n            \r\n            dispatch(login({ username, password }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {LogIn ? (\r\n                <div>\r\n                    <h2 className=\"text-3xl font-bold mb-5\">Welcome {user.username}</h2>\r\n                    <button className=\"bg-red-500 text-white font-bold py-2 px-4 rounded hover:bg-green-600 mb-4\" onClick={() => dispatch(logout())}>Logout</button>\r\n                    <Register />\r\n                </div>\r\n            ) : (\r\n<div className=\"flex justify-center items-center h-screen bg-gray-100\">\r\n<fieldset class=\"border border-green-500 bg-blue-100\">\r\n                    <h1 className=\"text-3xl font-bold mb-5\"> Login</h1>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        value={username} \r\n                        required \r\n                        className=\"mt-4 block w-full p-2 border border-green-500 rounded-md focus:outline-none focus:ring-2 focus:ring-green-300\"\r\n                        onChange={(e) => setusername(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"mt-1 block w-full p-2 border border-green-500 rounded-md\"\r\n                        value={password}\r\n                        onChange={(e) => setpassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    {errorMessage && (\r\n                            <div className=\"text-red-500 mt-2\">{errorMessage}</div>)}\r\n                    <button className=\"bg-green-500 text-white font-bold py-2 px-4 rounded hover:bg-red-600 mt-5 mb-4\" onClick={() => handleSubmit()}>Login</button>\r\n                    </fieldset></div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loginform;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}