{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task9\\\\4 nov class based\\\\react-start-task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Register from \"./Register\";\nimport Country from \"./Country\";\nimport State from \"./State\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dbx = null;\nfunction App() {\n  _s();\n  const [Page, xx] = useState('Register');\n  useEffect(() => {\n    const x = indexedDB.open(\"ReactDemo\", 1);\n    x.onupgradeneeded = e => {\n      const db = e.target.result;\n      // Create object stores with 'id' as the keyPath\n      db.createObjectStore(\"register\", {\n        keyPath: \"id\",\n        autoIncrement: true\n      });\n      db.createObjectStore(\"country\", {\n        keyPath: \"id\",\n        autoIncrement: true\n      });\n      db.createObjectStore(\"state\", {\n        keyPath: \"id\",\n        autoIncrement: true\n      });\n    };\n    x.onsuccess = e => {\n      console.log(\"db Initialized\");\n    };\n    x.onerror = e => {\n      console.log(\"db Error\", e.target.error);\n    };\n  }, []);\n  const display = () => {\n    if (Page == 'Register') {\n      return /*#__PURE__*/_jsxDEV(Register, {\n        Pages: xx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n    } else if (Page == 'Country') {\n      return /*#__PURE__*/_jsxDEV(Country, {\n        Pages: xx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    } else if (Page == 'State') {\n      return /*#__PURE__*/_jsxDEV(State, {\n        Pages: xx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return display();\n}\n_s(App, \"QYzzhFnFkNhvUy4GCwZffyhPmuM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Register","Country","State","jsxDEV","_jsxDEV","dbx","App","_s","Page","xx","x","indexedDB","open","onupgradeneeded","e","db","target","result","createObjectStore","keyPath","autoIncrement","onsuccess","console","log","onerror","error","display","Pages","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task9/4 nov class based/react-start-task/src/App.js"],"sourcesContent":["import React ,{ useEffect, useState } from \"react\";\nimport Register from \"./Register\";\nimport Country from \"./Country\";\nimport State from \"./State\";\n\nlet dbx = null;\n\nfunction App() {\n\n  const [Page, xx] = useState('Register');\n\n  useEffect(()=>{\n    const x=indexedDB.open(\"ReactDemo\",1);\n    x.onupgradeneeded = (e) => { \n      const db = e.target.result;\n      // Create object stores with 'id' as the keyPath\n      db.createObjectStore(\"register\", { keyPath: \"id\", autoIncrement: true });\n      db.createObjectStore(\"country\", { keyPath: \"id\", autoIncrement: true });\n      db.createObjectStore(\"state\", { keyPath: \"id\", autoIncrement: true });\n  };\n  \n    x.onsuccess = (e) => {console.log(\"db Initialized\");}\n    x.onerror = (e) => {console.log(\"db Error\",e.target.error);}},[]);\n\n    \n\n  const display = () =>{\n    if(Page == 'Register'){\n      return <Register Pages={xx}  />;\n    }else if(Page == 'Country'){\n      return <Country Pages={xx}  />;\n    }else if(Page == 'State'){\n      return <State Pages={xx}  />;\n    }\n  }\n\n\n  return (\n    display()\n ); \n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,IAAIC,GAAG,GAAG,IAAI;AAEd,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,EAAE,CAAC,GAAGV,QAAQ,CAAC,UAAU,CAAC;EAEvCD,SAAS,CAAC,MAAI;IACZ,MAAMY,CAAC,GAACC,SAAS,CAACC,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IACrCF,CAAC,CAACG,eAAe,GAAIC,CAAC,IAAK;MACzB,MAAMC,EAAE,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;MAC1B;MACAF,EAAE,CAACG,iBAAiB,CAAC,UAAU,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEC,aAAa,EAAE;MAAK,CAAC,CAAC;MACxEL,EAAE,CAACG,iBAAiB,CAAC,SAAS,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEC,aAAa,EAAE;MAAK,CAAC,CAAC;MACvEL,EAAE,CAACG,iBAAiB,CAAC,OAAO,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEC,aAAa,EAAE;MAAK,CAAC,CAAC;IACzE,CAAC;IAECV,CAAC,CAACW,SAAS,GAAIP,CAAC,IAAK;MAACQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAAC,CAAC;IACrDb,CAAC,CAACc,OAAO,GAAIV,CAAC,IAAK;MAACQ,OAAO,CAACC,GAAG,CAAC,UAAU,EAACT,CAAC,CAACE,MAAM,CAACS,KAAK,CAAC;IAAC,CAAC;EAAA,CAAC,EAAC,EAAE,CAAC;EAInE,MAAMC,OAAO,GAAGA,CAAA,KAAK;IACnB,IAAGlB,IAAI,IAAI,UAAU,EAAC;MACpB,oBAAOJ,OAAA,CAACJ,QAAQ;QAAC2B,KAAK,EAAElB;MAAG;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACjC,CAAC,MAAK,IAAGvB,IAAI,IAAI,SAAS,EAAC;MACzB,oBAAOJ,OAAA,CAACH,OAAO;QAAC0B,KAAK,EAAElB;MAAG;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAChC,CAAC,MAAK,IAAGvB,IAAI,IAAI,OAAO,EAAC;MACvB,oBAAOJ,OAAA,CAACF,KAAK;QAACyB,KAAK,EAAElB;MAAG;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC9B;EACF,CAAC;EAGD,OACEL,OAAO,CAAC,CAAC;AAEb;AAACnB,EAAA,CAjCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}