{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tasks: [] // Stores the list of countries\n};\nconst countrySlice = createSlice({\n  name: \"country\",\n  initialState,\n  reducers: {\n    // Add a new country\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    // Edit an existing country\n    editTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      if (index >= 0) state.tasks[index] = action.payload;\n    },\n    // Delete a country\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    // Load all countries\n    loadTasks: (state, action) => {\n      state.tasks = action.payload; // Set the tasks array\n    }\n  }\n});\nexport const {\n  addTask,\n  editTask,\n  deleteTask,\n  loadTasks\n} = countrySlice.actions;\nexport default countrySlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","countrySlice","name","reducers","addTask","state","action","push","payload","editTask","index","findIndex","task","id","deleteTask","filter","loadTasks","actions","reducer"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/Task_11_to_16/Task_16_React_Redux_toolkit_crud/MyProject/src/redux/countrySlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  tasks: [], // Stores the list of countries\r\n};\r\n\r\nconst countrySlice = createSlice({\r\n  name: \"country\",\r\n  initialState,\r\n  reducers: {\r\n    // Add a new country\r\n    addTask: (state, action) => {\r\n      state.tasks.push(action.payload);\r\n    },\r\n    // Edit an existing country\r\n    editTask: (state, action) => {\r\n      const index = state.tasks.findIndex((task) => task.id === action.payload.id);\r\n      if (index >= 0) state.tasks[index] = action.payload;\r\n    },\r\n    // Delete a country\r\n    deleteTask: (state, action) => {\r\n      state.tasks = state.tasks.filter((task) => task.id !== action.payload);\r\n    },\r\n    // Load all countries\r\n    loadTasks: (state, action) => {\r\n      state.tasks = action.payload; // Set the tasks array\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTask, editTask, deleteTask, loadTasks } = countrySlice.actions;\r\nexport default countrySlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE,CAAE;AACb,CAAC;AAED,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACR;IACAC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACD;IACAC,QAAQ,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMI,KAAK,GAAGL,KAAK,CAACL,KAAK,CAACW,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAACK,EAAE,CAAC;MAC5E,IAAIH,KAAK,IAAI,CAAC,EAAEL,KAAK,CAACL,KAAK,CAACU,KAAK,CAAC,GAAGJ,MAAM,CAACE,OAAO;IACrD,CAAC;IACD;IACAM,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACe,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAAC;IACxE,CAAC;IACD;IACAQ,SAAS,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACE,OAAO,CAAC,CAAC;IAChC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,OAAO;EAAEK,QAAQ;EAAEK,UAAU;EAAEE;AAAU,CAAC,GAAGf,YAAY,CAACgB,OAAO;AAChF,eAAehB,YAAY,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}