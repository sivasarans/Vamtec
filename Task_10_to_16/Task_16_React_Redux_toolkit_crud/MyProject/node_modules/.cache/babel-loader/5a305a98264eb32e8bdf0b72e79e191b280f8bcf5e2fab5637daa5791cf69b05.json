{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// Predefined initial state\nconst initialState = {\n  tasks: [{\n    id: 1,\n    stateName: \"Tamil Nadu\",\n    country: \"India\"\n  }, {\n    id: 2,\n    stateName: \"California\",\n    country: \"United States\"\n  }] // Example states\n};\nconst stateSlice = createSlice({\n  name: \"state\",\n  initialState,\n  reducers: {\n    // Add a new state\n    addTask: (state, action) => {\n      const newId = state.tasks.length > 0 ? Math.max(...state.tasks.map(task => task.id)) + 1 : 1; // Find max ID and increment\n      state.tasks.push({\n        id: newId,\n        ...action.payload\n      });\n    },\n    // Edit an existing state\n    editTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      if (index >= 0) {\n        state.tasks[index] = {\n          ...state.tasks[index],\n          ...action.payload\n        }; // Merge updates\n      }\n    },\n    // Delete a state\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    // Load all states\n    loadTasks: (state, action) => {\n      state.tasks = action.payload; // Replace tasks array with loaded data\n    }\n  }\n});\nexport const {\n  addTask,\n  editTask,\n  deleteTask,\n  loadTasks\n} = stateSlice.actions;\nexport default stateSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","id","stateName","country","stateSlice","name","reducers","addTask","state","action","newId","length","Math","max","map","task","push","payload","editTask","index","findIndex","deleteTask","filter","loadTasks","actions","reducer"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/Task_11_to_16/Task_16_React_Redux_toolkit_crud/MyProject/src/redux/stateSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// Predefined initial state\r\nconst initialState = {\r\n  tasks: [\r\n    { id: 1, stateName: \"Tamil Nadu\", country: \"India\" },\r\n    { id: 2, stateName: \"California\", country: \"United States\" },\r\n  ], // Example states\r\n};\r\n\r\nconst stateSlice = createSlice({\r\n  name: \"state\",\r\n  initialState,\r\n  reducers: {\r\n    // Add a new state\r\n    addTask: (state, action) => {\r\n      const newId =\r\n        state.tasks.length > 0\r\n          ? Math.max(...state.tasks.map((task) => task.id)) + 1\r\n          : 1; // Find max ID and increment\r\n      state.tasks.push({ id: newId, ...action.payload });\r\n    },\r\n    // Edit an existing state\r\n    editTask: (state, action) => {\r\n      const index = state.tasks.findIndex((task) => task.id === action.payload.id);\r\n      if (index >= 0) {\r\n        state.tasks[index] = { ...state.tasks[index], ...action.payload }; // Merge updates\r\n      }\r\n    },\r\n    // Delete a state\r\n    deleteTask: (state, action) => {\r\n      state.tasks = state.tasks.filter((task) => task.id !== action.payload);\r\n    },\r\n    // Load all states\r\n    loadTasks: (state, action) => {\r\n      state.tasks = action.payload; // Replace tasks array with loaded data\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTask, editTask, deleteTask, loadTasks } = stateSlice.actions;\r\nexport default stateSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEC,SAAS,EAAE,YAAY;IAAEC,OAAO,EAAE;EAAQ,CAAC,EACpD;IAAEF,EAAE,EAAE,CAAC;IAAEC,SAAS,EAAE,YAAY;IAAEC,OAAO,EAAE;EAAgB,CAAC,CAC7D,CAAE;AACL,CAAC;AAED,MAAMC,UAAU,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,OAAO;EACbN,YAAY;EACZO,QAAQ,EAAE;IACR;IACAC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,KAAK,GACTF,KAAK,CAACR,KAAK,CAACW,MAAM,GAAG,CAAC,GAClBC,IAAI,CAACC,GAAG,CAAC,GAAGL,KAAK,CAACR,KAAK,CAACc,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACd,EAAE,CAAC,CAAC,GAAG,CAAC,GACnD,CAAC,CAAC,CAAC;MACTO,KAAK,CAACR,KAAK,CAACgB,IAAI,CAAC;QAAEf,EAAE,EAAES,KAAK;QAAE,GAAGD,MAAM,CAACQ;MAAQ,CAAC,CAAC;IACpD,CAAC;IACD;IACAC,QAAQ,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMU,KAAK,GAAGX,KAAK,CAACR,KAAK,CAACoB,SAAS,CAAEL,IAAI,IAAKA,IAAI,CAACd,EAAE,KAAKQ,MAAM,CAACQ,OAAO,CAAChB,EAAE,CAAC;MAC5E,IAAIkB,KAAK,IAAI,CAAC,EAAE;QACdX,KAAK,CAACR,KAAK,CAACmB,KAAK,CAAC,GAAG;UAAE,GAAGX,KAAK,CAACR,KAAK,CAACmB,KAAK,CAAC;UAAE,GAAGV,MAAM,CAACQ;QAAQ,CAAC,CAAC,CAAC;MACrE;IACF,CAAC;IACD;IACAI,UAAU,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACsB,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACd,EAAE,KAAKQ,MAAM,CAACQ,OAAO,CAAC;IACxE,CAAC;IACD;IACAM,SAAS,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACQ,OAAO,CAAC,CAAC;IAChC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV,OAAO;EAAEW,QAAQ;EAAEG,UAAU;EAAEE;AAAU,CAAC,GAAGnB,UAAU,CAACoB,OAAO;AAC9E,eAAepB,UAAU,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}