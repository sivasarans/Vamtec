{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React Router\\\\src\\\\components\\\\Country.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { dbx } from '../App'; // Ensure `dbx` is properly initialized in App.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Country() {\n  _s();\n  const navigate = useNavigate();\n  const [formdata, setformdata] = useState({\n    countryCode: '',\n    countryName: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [displaydata, setdisplaydata] = useState([]);\n  const [editId, setEditId] = useState(null);\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setformdata({\n      ...formdata,\n      [id]: value\n    });\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [id]: \"\"\n    })); // Reset error for specific input\n  };\n  const validateForm = () => {\n    const formErrors = {};\n    if (!formdata.countryCode) {\n      formErrors.countryCode = \"Country Code is required.\";\n    } else if (formdata.countryCode.length !== 2) {\n      formErrors.countryCode = \"Country Code should be exactly 2 characters.\";\n    }\n    if (!formdata.countryName) {\n      formErrors.countryName = \"Country Name is required.\";\n    } else if (formdata.countryName.length < 3) {\n      formErrors.countryName = \"Country Name should be at least 3 characters.\";\n    }\n    setErrors(formErrors);\n    return Object.keys(formErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      if (!editId) {\n        // Add new entry\n        if (dbx) {\n          const countryAdd = dbx.transaction(\"country\", \"readwrite\").objectStore(\"country\").add(formdata);\n          countryAdd.onsuccess = () => {\n            alert(\"Country added successfully!\");\n            console.log(\"Country added:\", formdata);\n            fetch(); // Refresh data\n            setformdata({\n              countryCode: '',\n              countryName: ''\n            }); // Clear form\n          };\n          countryAdd.onerror = event => {\n            console.error(\"Error adding country:\", event.target.error);\n            alert(\"Failed to add country. Please try again.\");\n          };\n        } else {\n          console.log(\"dbx error (not initialized)\");\n        }\n      } else {\n        // Update existing entry\n        if (dbx) {\n          const transaction = dbx.transaction(\"country\", \"readwrite\");\n          const store = transaction.objectStore(\"country\");\n          const request = store.put({\n            ...formdata,\n            id: editId\n          });\n          request.onsuccess = () => {\n            alert(\"Country updated successfully!\");\n            console.log(\"Country updated:\", formdata);\n            fetch(); // Refresh data\n            setformdata({\n              countryCode: '',\n              countryName: ''\n            });\n            setEditId(null); // Reset edit ID after update\n          };\n          request.onerror = event => {\n            console.error(\"Error updating country:\", event.target.error);\n            alert(\"Failed to update country. Please try again.\");\n          };\n        } else {\n          console.log(\"dbx error (not initialized)\");\n        }\n      }\n    }\n  };\n  const fetch = () => {\n    if (dbx) {\n      const transaction = dbx.transaction(\"country\", \"readonly\");\n      const store = transaction.objectStore(\"country\");\n      const request = store.getAll();\n      request.onsuccess = e => {\n        setdisplaydata(e.target.result);\n        console.log(\"Data fetched successfully!\");\n      };\n      request.onerror = e => {\n        console.error(\"Error fetching data:\", e.target.error);\n      };\n    } else {\n      console.log(\"dbx error (not initialized)\");\n    }\n  };\n  const handleDelete = id => {\n    if (dbx) {\n      const transaction = dbx.transaction(\"country\", \"readwrite\");\n      const store = transaction.objectStore(\"country\");\n      const request = store.delete(id);\n      request.onsuccess = () => {\n        console.log(\"Country deleted successfully!\");\n        fetch(); // Refresh data\n      };\n      request.onerror = e => {\n        console.error(\"Error deleting data:\", e.target.error);\n      };\n    } else {\n      console.log(\"dbx error (not initialized)\");\n    }\n  };\n  const handleEdit = id => {\n    if (dbx) {\n      const transaction = dbx.transaction(\"country\", \"readwrite\");\n      const store = transaction.objectStore(\"country\");\n      const request = store.get(id);\n      request.onsuccess = e => {\n        const data = e.target.result;\n        if (data) {\n          setformdata({\n            ...data\n          });\n          setEditId(id); // Set edit ID to indicate editing mode\n        }\n      };\n      request.onerror = e => {\n        console.error(\"Error retrieving data for editing:\", e.target.error);\n      };\n    } else {\n      console.log(\"dbx error (not initialized)\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 flex items-center justify-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        type: \"button\",\n        className: \"rounded border-gray-300 bg-gray-500 text-white p-2 mb-4\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Country Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"countryForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countryCode\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Country Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"countryCode\",\n            value: formdata.countryCode,\n            onChange: handleChange,\n            className: \"mt-1 block w-full p-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), errors.countryCode && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.countryCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countryName\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Country Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"countryName\",\n            value: formdata.countryName,\n            onChange: handleChange,\n            className: \"mt-1 block w-full p-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), errors.countryName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm\",\n            children: errors.countryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600\",\n          children: editId ? \"Update Country\" : \"Add Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mt-6 mb-4\",\n        children: \"Countries List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetch,\n        className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600\",\n        children: \"Load Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white border border-gray-300 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Country Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Country Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-2 border-b text-left\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displaydata.map((value, ind) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.countryCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.countryName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(value.id),\n                className: \"text-blue-500\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(value.id),\n                className: \"text-red-500\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, ind, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(Country, \"UheGMNEuK8fnU+WKPdNnzPt47tY=\", false, function () {\n  return [useNavigate];\n});\n_c = Country;\nexport default Country;\nvar _c;\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","useState","useNavigate","dbx","jsxDEV","_jsxDEV","Country","_s","navigate","formdata","setformdata","countryCode","countryName","errors","setErrors","displaydata","setdisplaydata","editId","setEditId","handleChange","e","id","value","target","prevErrors","validateForm","formErrors","length","Object","keys","handleSubmit","preventDefault","countryAdd","transaction","objectStore","add","onsuccess","alert","console","log","fetch","onerror","event","error","store","request","put","getAll","result","handleDelete","delete","handleEdit","get","data","className","children","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","map","ind","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React Router/src/components/Country.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { dbx } from '../App';  // Ensure `dbx` is properly initialized in App.js\r\n\r\nfunction Country() {\r\n  const navigate = useNavigate();\r\n  const [formdata, setformdata] = useState({ countryCode: '', countryName: '' });\r\n  const [errors, setErrors] = useState({});\r\n  const [displaydata, setdisplaydata] = useState([]);\r\n  const [editId, setEditId] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setformdata({ ...formdata, [id]: value });\r\n    setErrors((prevErrors) => ({ ...prevErrors, [id]: \"\" })); // Reset error for specific input\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const formErrors = {};\r\n    if (!formdata.countryCode) {\r\n      formErrors.countryCode = \"Country Code is required.\";\r\n    } else if (formdata.countryCode.length !== 2) {\r\n      formErrors.countryCode = \"Country Code should be exactly 2 characters.\";\r\n    }\r\n\r\n    if (!formdata.countryName) {\r\n      formErrors.countryName = \"Country Name is required.\";\r\n    } else if (formdata.countryName.length < 3) {\r\n      formErrors.countryName = \"Country Name should be at least 3 characters.\";\r\n    }\r\n\r\n    setErrors(formErrors);\r\n    return Object.keys(formErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      if (!editId) {\r\n        // Add new entry\r\n        if (dbx) {\r\n          const countryAdd = dbx.transaction(\"country\", \"readwrite\").objectStore(\"country\").add(formdata);\r\n          countryAdd.onsuccess = () => {\r\n            alert(\"Country added successfully!\");\r\n            console.log(\"Country added:\", formdata);\r\n            fetch(); // Refresh data\r\n            setformdata({ countryCode: '', countryName: '' }); // Clear form\r\n          };\r\n          countryAdd.onerror = (event) => {\r\n            console.error(\"Error adding country:\", event.target.error);\r\n            alert(\"Failed to add country. Please try again.\");\r\n          };\r\n        } else {\r\n          console.log(\"dbx error (not initialized)\");\r\n        }\r\n      } else {\r\n        // Update existing entry\r\n        if (dbx) {\r\n          const transaction = dbx.transaction(\"country\", \"readwrite\");\r\n          const store = transaction.objectStore(\"country\");\r\n          const request = store.put({ ...formdata, id: editId });\r\n\r\n          request.onsuccess = () => {\r\n            alert(\"Country updated successfully!\");\r\n            console.log(\"Country updated:\", formdata);\r\n            fetch(); // Refresh data\r\n            setformdata({ countryCode: '', countryName: '' });\r\n            setEditId(null); // Reset edit ID after update\r\n          };\r\n          request.onerror = (event) => {\r\n            console.error(\"Error updating country:\", event.target.error);\r\n            alert(\"Failed to update country. Please try again.\");\r\n          };\r\n        } else {\r\n          console.log(\"dbx error (not initialized)\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetch = () => {\r\n    if (dbx) {\r\n      const transaction = dbx.transaction(\"country\", \"readonly\");\r\n      const store = transaction.objectStore(\"country\");\r\n      const request = store.getAll();\r\n\r\n      request.onsuccess = (e) => {\r\n        setdisplaydata(e.target.result);\r\n        console.log(\"Data fetched successfully!\");\r\n      };\r\n      request.onerror = (e) => {\r\n        console.error(\"Error fetching data:\", e.target.error);\r\n      };\r\n    } else {\r\n      console.log(\"dbx error (not initialized)\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (dbx) {\r\n      const transaction = dbx.transaction(\"country\", \"readwrite\");\r\n      const store = transaction.objectStore(\"country\");\r\n      const request = store.delete(id);\r\n\r\n      request.onsuccess = () => {\r\n        console.log(\"Country deleted successfully!\");\r\n        fetch(); // Refresh data\r\n      };\r\n      request.onerror = (e) => {\r\n        console.error(\"Error deleting data:\", e.target.error);\r\n      };\r\n    } else {\r\n      console.log(\"dbx error (not initialized)\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    if (dbx) {\r\n      const transaction = dbx.transaction(\"country\", \"readwrite\");\r\n      const store = transaction.objectStore(\"country\");\r\n      const request = store.get(id);\r\n\r\n      request.onsuccess = (e) => {\r\n        const data = e.target.result;\r\n        if (data) {\r\n          setformdata({ ...data });\r\n          setEditId(id); // Set edit ID to indicate editing mode\r\n        }\r\n      };\r\n      request.onerror = (e) => {\r\n        console.error(\"Error retrieving data for editing:\", e.target.error);\r\n      };\r\n    } else {\r\n      console.log(\"dbx error (not initialized)\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 flex items-center justify-center h-screen\">\r\n      <div className=\"bg-white p-6 rounded shadow-md w-96\">\r\n        <button\r\n          onClick={() => navigate('/')}\r\n          type=\"button\"\r\n          className=\"rounded border-gray-300 bg-gray-500 text-white p-2 mb-4\"\r\n        >\r\n          Back\r\n        </button>\r\n        <h2 className=\"text-2xl font-bold mb-4\">Country Select</h2>\r\n        <form id=\"countryForm\" onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"countryCode\" className=\"block text-sm font-medium text-gray-700\">\r\n              Country Code\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"countryCode\"\r\n              value={formdata.countryCode}\r\n              onChange={handleChange}\r\n              className=\"mt-1 block w-full p-2 border border-gray-300 rounded\"\r\n            />\r\n            {errors.countryCode && (\r\n              <p className=\"text-red-500 text-sm\">{errors.countryCode}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"countryName\" className=\"block text-sm font-medium text-gray-700\">\r\n              Country Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"countryName\"\r\n              value={formdata.countryName}\r\n              onChange={handleChange}\r\n              className=\"mt-1 block w-full p-2 border border-gray-300 rounded\"\r\n            />\r\n            {errors.countryName && (\r\n              <p className=\"text-red-500 text-sm\">{errors.countryName}</p>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600\"\r\n          >\r\n            {editId ? \"Update Country\" : \"Add Country\"}\r\n          </button>\r\n        </form>\r\n\r\n        <h2 className=\"text-xl font-bold mt-6 mb-4\">Countries List</h2>\r\n        <button onClick={fetch} className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-600\">Load Countries</button>\r\n        <table className=\"min-w-full bg-white border border-gray-300 mt-4\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"py-2 px-2 border-b text-left\">ID</th>\r\n              <th className=\"py-2 px-2 border-b text-left\">Country Code</th>\r\n              <th className=\"py-2 px-2 border-b text-left\">Country Name</th>\r\n              <th className=\"py-2 px-2 border-b text-left\">Edit</th>\r\n              <th className=\"py-2 px-2 border-b text-left\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {displaydata.map((value, ind) => (\r\n              <tr key={ind}>\r\n                <td>{value.id}</td>\r\n                <td>{value.countryCode}</td>\r\n                <td>{value.countryName}</td>\r\n                <td>\r\n                  <button onClick={() => handleEdit(value.id)} className=\"text-blue-500\">Edit</button>\r\n                </td>\r\n                <td>\r\n                  <button onClick={() => handleDelete(value.id)} className=\"text-red-500\">Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}