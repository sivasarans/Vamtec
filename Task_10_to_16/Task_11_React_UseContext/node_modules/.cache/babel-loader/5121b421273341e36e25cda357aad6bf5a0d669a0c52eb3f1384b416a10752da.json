{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sivasaran\\\\Desktop\\\\Vamtec\\\\task10 10nov2024\\\\React UseContext\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Register from \"./components/Register\";\nimport Country from \"./components/Country\";\nimport State from \"./components/State\";\nimport { Change } from \"./components/Page\";\nimport MemoExample from './components/MemoExample';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let dbx = null;\nfunction App() {\n  _s();\n  /*#__PURE__*/_jsxDEV(MemoExample, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n  const {\n    show,\n    setshow\n  } = useContext(Change);\n  const display = () => {\n    if (show == 'Register') {\n      return /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    } else if (show == 'Country') {\n      return /*#__PURE__*/_jsxDEV(Country, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    } else if (show == 'State') {\n      return /*#__PURE__*/_jsxDEV(State, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  useEffect(() => {\n    const x = indexedDB.open(\"ReactDemo!\", 1);\n    x.onupgradeneeded = e => {\n      dbx = e.target.result;\n      // Create object stores with 'id' as the keyPath\n      dbx.createObjectStore(\"register\", {\n        keyPath: \"id\",\n        autoIncrement: true\n      });\n      dbx.createObjectStore(\"country\", {\n        keyPath: \"id\",\n        autoIncrement: true\n      });\n      dbx.createObjectStore(\"state\", {\n        keyPath: \"id\",\n        autoIncrement: true\n      });\n    };\n    x.onsuccess = e => {\n      dbx = e.target.result;\n      console.log(\"db Initialized\");\n    };\n    x.onerror = e => {\n      console.log(\"db Error\", e.target.error);\n    };\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <Router future={{ v7_relativeSplatPath: true, v7_startTransition: true }}> {/* added \"future\" for console error */}\n    //       <Routes>\n    //       <Route path=\"/\" element={<Register/>}/> \n    //       <Route path=\"/register\" element={<Register />} /> {/* sample */}\n    //       <Route path=\"/country\" element={<Country />} />\n    //       <Route path=\"/state\" element={<State />} />\n    //       <Route path=\"/x1\" element={<ContextProvider />} />\n    //       <Route path=\"/x2\" element={<ConsumerComponent />} />\n    //       <Route path=\"/x3\" element={<CustomerComponent />} />\n    //       {/* <Route path=\"/Component\" element={<Component />} /> */}\n    //       </Routes>\n    // </Router>\n    _jsxDEV(_Fragment, {\n      children: [display(), /*#__PURE__*/_jsxDEV(MemoExample, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(App, \"lNxcGs7PqylLAdi9TMNmAKqWCfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useContext","BrowserRouter","Router","Routes","Route","Register","Country","State","Change","MemoExample","jsxDEV","_jsxDEV","Fragment","_Fragment","dbx","App","_s","fileName","_jsxFileName","lineNumber","columnNumber","show","setshow","display","x","indexedDB","open","onupgradeneeded","e","target","result","createObjectStore","keyPath","autoIncrement","onsuccess","console","log","onerror","error","children","_c","$RefreshReg$"],"sources":["C:/Users/Sivasaran/Desktop/Vamtec/task10 10nov2024/React UseContext/src/App.js"],"sourcesContent":["import React ,{ useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Register from \"./components/Register\";\nimport Country from \"./components/Country\";\nimport State from \"./components/State\";\nimport { Change } from \"./components/Page\";\nimport MemoExample from './components/MemoExample';\n\n\n\n\n\n\nexport let dbx = null;\n\n\n\nfunction App() {\n\n  <MemoExample />\n\n\n  const {show,setshow} = useContext(Change);\n  const display = () =>{\n    if(show == 'Register'){\n      return <Register />;\n    }else if(show == 'Country' ){\n      return <Country />;\n     }else if(show == 'State' ){\n      return <State />;\n     }\n  }\n\n  \n\n  \n\n\n  useEffect(()=>{\n    const x=indexedDB.open(\"ReactDemo!\",1);\n    x.onupgradeneeded = (e) => { \n      dbx = e.target.result;\n      // Create object stores with 'id' as the keyPath\n      dbx.createObjectStore(\"register\", { keyPath: \"id\", autoIncrement: true });\n      dbx.createObjectStore(\"country\", { keyPath: \"id\", autoIncrement: true });\n      dbx.createObjectStore(\"state\", { keyPath: \"id\", autoIncrement: true });\n  };\n  \n    x.onsuccess = (e) => {       dbx = e.target.result;      console.log(\"db Initialized\");}\n    x.onerror = (e) => {console.log(\"db Error\",e.target.error);}},[]);\n\n  return (\n    // <Router future={{ v7_relativeSplatPath: true, v7_startTransition: true }}> {/* added \"future\" for console error */}\n    //       <Routes>\n    //       <Route path=\"/\" element={<Register/>}/> \n    //       <Route path=\"/register\" element={<Register />} /> {/* sample */}\n    //       <Route path=\"/country\" element={<Country />} />\n    //       <Route path=\"/state\" element={<State />} />\n    //       <Route path=\"/x1\" element={<ContextProvider />} />\n    //       <Route path=\"/x2\" element={<ConsumerComponent />} />\n    //       <Route path=\"/x3\" element={<CustomerComponent />} />\n\n    //       {/* <Route path=\"/Component\" element={<Component />} /> */}\n\n\n    //       </Routes>\n\n    // </Router>\n<>\n{display()}\n<MemoExample />\n    </>\n\n\n\n  );\n}\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}